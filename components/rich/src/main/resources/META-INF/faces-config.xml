<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<faces-config version="2.0" metadata-complete="false" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/extensions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <component>
        <description> The &amp;lt;rich:chartYAxis&amp;gt; tag
 @author Lukas Macko
</description>
        <component-type>org.richfaces.ui.output.YAxis</component-type>
        <component-class>org.richfaces.ui.output.component.UIYAxis</component-class>
        <property>
            <description> Minimum value shown on the axis.
</description>
            <property-name>min</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Maximum value of the axis
</description>
            <property-name>max</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Itâ€™s the fraction of margin that the scaling algorithm will add to avoid
 that the outermost points ends up on the grid border.
</description>
            <property-name>pad</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Format for axis ticks (Date series only)
</description>
            <property-name>format</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Text shown next to axis.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChartYAxis</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chartYAxis</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ui.output.ChartFamily</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:calendar&amp;gt; component allows the user to enter a date and time through an in-line or pop-up
 calendar. The pop-up calendar can navigate through months and years, and its look and feel can be highly customized.
 &lt;/p&gt;

 @author amarkhel
</description>
        <component-type>org.richfaces.Calendar</component-type>
        <component-class>org.richfaces.component.UICalendar</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Attribute is similar to the standard HTML attribute and can specify window placement relative to the content. Default value is "3".</description>
            <property-name>zindex</property-name>
            <property-class>int</property-class>
            <default-value>3</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the vertical offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Vertical Offset</display-name>
            <property-name>verticalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the corner attachment point with which the popup should be connected. Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Joint Point</display-name>
            <property-name>jointPoint</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the direction of the popup.  Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Direction</display-name>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the horizontal offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Horizontal Offset</display-name>
            <property-name>horizontalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the input element.
</description>
            <property-name>oninputkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Define the initial range of date which will be loaded to client from dataModel under rendering
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultPreloadBegin(getCurrentDateOrDefault())"
 &lt;/p&gt;
</description>
            <property-name>preloadDateRangeEnd</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the current month or year is changed
</description>
            <property-name>oncurrentdateselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">currentdateselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If false Calendar's header should not be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>showHeader</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Position of this element in the tabbing order for the current document. This value must be an integer between 0 and
 32767.
</description>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Used for current date calculations
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultTimeZone()"
 &lt;/p&gt;
</description>
            <property-name>timeZone</property-name>
            <property-class>java.util.TimeZone</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when this element loses focus and its value has been modified since gaining focus.
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true" calendar input will be editable and it will be possible to change the date manually. If "false" the text field
 will be "read-only", so the value can be changed only from a handle.
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "false"
 &lt;/p&gt;
</description>
            <property-name>enableManualInput</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed called when the input field value is selected
</description>
            <property-name>oninputselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines label for the popup button element. If the attribute is set "buttonIcon" and "buttonIconDisabled" are ignored
</description>
            <property-name>buttonLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true", the calendar will be rendered initially as hidden with additional elements for calling as popup
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>popup</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the button element. This value must be passed through as the
 "class" attribute on generated markup.
</description>
            <property-name>buttonClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 This attribute defines the mode for "today" control. Possible values are "scroll", "select", "hidden"
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "select"
 &lt;/p&gt;
</description>
            <property-name>todayControlMode</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the input element.
</description>
            <property-name>oninputclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved away from the date cell
</description>
            <property-name>ondatemouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">datemouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Gets what the minimal days required in the first week of the year are; e.g., if the first week is defined as one that
 contains the first day of the first month of a year, this method returns 1. If the minimal days required must be a full
 week, this method returns 7.
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultMinDaysInFirstWeek()"
 &lt;/p&gt;
</description>
            <property-name>minDaysInFirstWeek</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after time is selected
</description>
            <property-name>ontimeselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">timeselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If false Calendar's footer should not be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>showFooter</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved onto the date cell
</description>
            <property-name>ondatemouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">datemouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Used to define the month and year which will be displayed
</description>
            <property-name>currentDate</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the input element.
</description>
            <property-name>oninputdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 The javascript function that enables or disables a day cell
 &lt;/p&gt;
</description>
            <property-name>dayDisableFunction</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the input element loses focus.
</description>
            <property-name>oninputblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputblur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when some date cell is selected
</description>
            <property-name>ondateselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dateselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the input element.
</description>
            <property-name>oninputmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines icon for the popup button element. The attribute is ignored if the "buttonLabel" is set
</description>
            <property-name>buttonIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the DOM is updated
</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Used to format the date and time strings, according to ISO 8601 (for example, d/M/yy HH:mm a)
</description>
            <property-name>datePattern</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true". Date and time are not selectable. In "popup" mode input is disabled and button is enabled.
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "false"
 &lt;/p&gt;
</description>
            <property-name>readonly</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines the size of an input field. Similar to the "size" attribute of &amp;lt;h:inputText/&amp;gt;
</description>
            <property-name>inputSize</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines disabled icon for the popup button element. The attribute is ignored if the "buttonLabel" is set
</description>
            <property-name>buttonDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 "false" value for this attribute makes text field invisible. It works only if popupMode="true" If showInput is "true" -
 input field will be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>showInput</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Defines time that will be used:
 &lt;/p&gt;
 &lt;ol&gt;
 &lt;li&gt;to set time when the value is empty&lt;/li&gt;
 &lt;li&gt;to set time when date changes and flag "resetTimeOnDateSelect" is true&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p&gt;
 Default value is "getDefaultValueOfDefaultTime()"
 &lt;/p&gt;
</description>
            <property-name>defaultTime</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true", rendered is disabled. In "popup" mode both controls are disabled
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "false"
 &lt;/p&gt;
</description>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Determines the first day of the week is; e.g., SUNDAY in the U.S., MONDAY in France. Possible values should be integers
 from 0 to 6, 0 corresponds to Sunday
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultFirstWeekDay()"
 &lt;/p&gt;
</description>
            <property-name>firstWeekDay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the popup element. This value must be passed through as the
 "class" attribute on generated markup.
</description>
            <property-name>popupClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before some date cell is selected
</description>
            <property-name>onbeforedateselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedateselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute that allows to customize short names of the months. Should accept list with the month names
</description>
            <property-name>monthLabelsShort</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the component is cleaned
</description>
            <property-name>onclean</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">clean</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If value is true then calendar should change time to defaultTime for newly-selected dates
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "false"
 &lt;/p&gt;
</description>
            <property-name>resetTimeOnDateSelect</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute that allows to customize short names of the weekdays. Should accept list with the weekday's names.
</description>
            <property-name>weekDayLabelsShort</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the input element.
</description>
            <property-name>oninputmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 This attribute is responsible for behaviour of dates from the previous and next months which are displayed in the current
 month. Valid values are "inactive" (Default) dates inactive and gray colored, "scroll" boundaries work as month scrolling
 controls, and "select" boundaries work in the same way as "scroll" but with the date clicked selection
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "inactive"
 &lt;/p&gt;
</description>
            <property-name>boundaryDatesMode</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> CSS style(s) to be applied to the input element
</description>
            <property-name>inputStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute that allows to customize names of the months. Should accept list with the month names
</description>
            <property-name>monthLabels</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the input field value is changed manually
</description>
            <property-name>oninputchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the input element receives focus.
</description>
            <property-name>oninputfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputfocus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the input element.
</description>
            <property-name>oninputkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If false this bar should not be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>showWeekDaysBar</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the input element.
</description>
            <property-name>oninputmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The javascript function that determines the CSS style class for each day cell
</description>
            <property-name>dayClassFunction</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Used to provide data for calendar elements. If data is not provided, all Data Model related functions are disabled
</description>
            <property-name>dataModel</property-name>
            <property-class>org.richfaces.model.CalendarDataModel</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If false ApplyButton should not be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "false"
 &lt;/p&gt;
</description>
            <property-name>showApplyButton</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Defines the last range of date which will be loaded to client from dataModel under rendering
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultPreloadEnd(getCurrentDateOrDefault())"
 &lt;/p&gt;
</description>
            <property-name>preloadDateRangeBegin</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Used for locale definition
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "getDefaultLocale()"
 &lt;/p&gt;
</description>
            <property-name>locale</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Valid values: ajax or client
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "client"
 &lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.AbstractCalendar.Mode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the input element.
</description>
            <property-name>oninputmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> CSS style(s) to be applied to the popup element
</description>
            <property-name>popupStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the input element. This value must be passed through as the
 "class" attribute on generated markup.
</description>
            <property-name>inputClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the current month or year is changed
</description>
            <property-name>onbeforecurrentdateselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforecurrentdateselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The starting label can be set when in the initial view state. If the initial value is already set through the value
 attribute, this is displayed instead.
</description>
            <property-name>defaultLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the input element.
</description>
            <property-name>oninputkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If false this bar should not be shown
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "true"
 &lt;/p&gt;
</description>
            <property-name>showWeeksBar</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the input element.
</description>
            <property-name>oninputmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before time is selected
</description>
            <property-name>onbeforetimeselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforetimeselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCalendar</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>calendar</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.CalendarHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Calendar</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CalendarRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:column&amp;gt; component facilitates columns in a table. It supports merging columns and rows, sorting,
 filtering, and customized skinning. &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.Column</component-type>
        <component-class>org.richfaces.component.UIColumn</component-class>
        <facet>
            <description>Column header</description>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description>Column footer</description>
            <facet-name>footer</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any footer generated for this column.</description>
            <display-name>Footer CSS Classes</display-name>
            <property-name>footerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any header generated for this column.</description>
            <display-name>Header CSS Classes</display-name>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines EL expression which returns true if given row should be displayed (EL expressions should use variable defined in
 filterVar attribute of dataTable).
</description>
            <property-name>filterExpression</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines order which will be used for sorting column: unsorted (default), ascending, descending.
</description>
            <property-name>sortOrder</property-name>
            <property-class>org.richfaces.component.SortOrder</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The message to be displayed when the filter expression is not able to be evaluated using the provided filter value.
</description>
            <property-name>filterConverterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Corresponds to the HTML rowspan attribute.
</description>
            <property-name>rowspan</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines value binding to the comparator that is used to compare the values.
</description>
            <property-name>comparator</property-name>
            <property-class>java.util.Comparator</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Corresponds to the HTML colspan attribute.
</description>
            <property-name>colspan</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines current filtering value.
</description>
            <property-name>filterValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Allows customizing column name in column visibility control in rich:extendedDataTable (showColumnControl)
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" next column begins from the first row.
</description>
            <property-name>breakRowBefore</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines current sorting type. Possible values: string, custom.
 If custom is used, no sorting controls are created, you are responsible for creating your own.&lt;br/&gt;
 Default: string
</description>
            <property-name>sortType</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"string"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines a bean property which is used for sorting of a column.
</description>
            <property-name>sortBy</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines width of column.
</description>
            <property-name>width</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Provides Filter instance which determines if given row value will be displayed.
</description>
            <property-name>filter</property-name>
            <property-class>org.richfaces.model.Filter</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines current filter type. Possible values: string, custom.
 If custom is used, no filter box is created, you are responsible for creating your own filter input.&lt;br/&gt;
 Default: string
</description>
            <property-name>filterType</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"string"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractColumn</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>column</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Column</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:menuItem&amp;gt; component represents a single item in a menu control. The &amp;lt;rich:menuItem&amp;gt;
 component can be also be used as a seperate component without a parent menu component, such as on a toolbar.&lt;/p&gt;
</description>
        <component-type>org.richfaces.MenuItem</component-type>
        <component-class>org.richfaces.component.UIMenuItem</component-class>
        <facet>
            <facet-name>icon</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>iconDisabled</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;The text label for the menu item. Alternatively, use the label facet to define content for the label&lt;/p&gt;
 &lt;p&gt;Default is server&lt;/p&gt;
</description>
            <property-name>label</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon to be displayed with the menu item
</description>
            <property-name>icon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Determines how the menu item requests are submitted.  Valid values:&lt;/p&gt;
 &lt;ol&gt;
     &lt;li&gt;server, the default setting, submits the form normally and completely refreshes the page.&lt;/li&gt;
     &lt;li&gt;ajax performs an Ajax form submission, and re-renders elements specified with the render attribute.&lt;/li&gt;
     &lt;li&gt;
         client causes the action and actionListener items to be ignored, and the behavior is fully defined by
         the nested components instead of responses from submissions
     &lt;/li&gt;
 &lt;/ol&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.Mode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon to be displayed with the menu item when it is disabled
</description>
            <property-name>iconDisabled</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMenuItem</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>menuItem</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DropDownMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MenuItemRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:inplaceInput&amp;gt; component allows information to be entered in-line in blocks of text, improving
 readability of the text. Multiple input regions can be navigated with keyboard navigation. The component has three
 functional states: the view state, where the component displays its initial setting, such as &amp;quot;click to
 edit&amp;quot;; the edit state, where the user can input text; and the &amp;quot;changed&amp;quot; state, where the new value for
 the component has been confirmed but can be edited again if required. &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.InplaceInput</component-type>
        <component-class>org.richfaces.component.UIInplaceInput</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when this element loses focus and its value has been modified since gaining focus.
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The width of the input element
</description>
            <property-name>inputWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when the value of this element is changed. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>changedClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Used to specify the event that switches the component to the edit state&lt;/p&gt;
 &lt;p&gt;Default is "click"&lt;/p&gt;
</description>
            <property-name>editEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" is set, buttons for confirming or canceling are added to the component
</description>
            <property-name>showControls</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>  Defines whether the changes should apply when the focus is lost. Default value - "true".
</description>
            <property-name>saveOnBlur</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when this element is active. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>activeClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Used to set the display text when value is undefined
</description>
            <property-name>defaultLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when
</description>
            <property-name>oninputmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractInplaceInput</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>inplaceInput</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.InplaceInput</cdk:component-family>
            <cdk:renderer-type>org.richfaces.InplaceInputRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:accordion&amp;gt; is a series of panels stacked on top of each other, each collapsed such that only the
 header of the panel is showing. When the header of a panel is clicked, it is expanded to show the content of the
 panel. Clicking on a different header will collapse the previous panel and expand the selected one. Each panel
 contained in a &amp;lt;rich:accordion&amp;gt; component is a &amp;lt;rich:accordionItem&amp;gt; component.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.Accordion</component-type>
        <component-class>org.richfaces.component.UIAccordion</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>  Points to the function to perform when before the switchable item is changed
</description>
            <property-name>onbeforeitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeitemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is active
</description>
            <property-name>itemActiveRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel header when the panel is not active
</description>
            <property-name>itemInactiveHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is not active
</description>
            <property-name>itemInactiveLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A CSS class applied to each of the accordionItem children
</description>
            <property-name>itemContentClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel header when the panel is active
</description>
            <property-name>itemActiveHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Occurs on the server side when an item is changed through Ajax using the server mode
</description>
            <property-name>itemChangeListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request
 Values phase), rather than waiting until Process Validations phase.
</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Holds the active tab name. This name is a reference to the name identifier of the active child &amp;lt;rich:tab&amp;gt;
 component.
</description>
            <property-name>activeItem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The width of the panel
</description>
            <property-name>width</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch mode when a panel is activated. One of: "client", "server", "ajax". Default: "ajax"
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is disabled
</description>
            <property-name>itemDisabledLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Points to the function to perform when the switchable item is changed.
</description>
            <property-name>onitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">itemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is not active
</description>
            <property-name>itemInactiveRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel header when the panel is disabled
</description>
            <property-name>itemDisabledHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is active
</description>
            <property-name>itemActiveLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel header
</description>
            <property-name>itemHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Applicable when cycling through the tabs. If "true", then when the last tab is active, cycling to next will activate the
 first tab, if "false", cycling to next will have not effect. The inverse applies for the first tab, and cycling to
 previous. Whether to Default: false
</description>
            <property-name>cycledSwitching</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is disabled
</description>
            <property-name>itemDisabledRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The height of the panel
</description>
            <property-name>height</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAccordion</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>accordion</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Accordion</cdk:component-family>
            <cdk:renderer-type>org.richfaces.AccordionRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &lt;rich:treeNode&gt; component is a child component of the &lt;rich:tree&gt; component. It represents nodes in the
 parent tree. The appearance and functionality of each tree node can be customized. &lt;/p&gt;

 @author Nick Belaevski
</description>
        <component-type>org.richfaces.TreeNode</component-type>
        <component-class>org.richfaces.component.UITreeNode</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until the Invoke Application phase.</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for collapsed node.</description>
            <property-name>iconCollapsed</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for expanded node.</description>
            <property-name>iconExpanded</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node labels.</description>
            <property-name>labelClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for component leaves.</description>
            <property-name>iconLeaf</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>MethodExpression representing an tree node toggle listener method that will be notified when the tree node is toggled. The expression must evaluate to a public method that takes an TreeToggleEvent parameter, with a return type of void, or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".</description>
            <property-name>toggleListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node handles.</description>
            <property-name>handleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node icons.</description>
            <property-name>iconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the node is toggle.
</description>
            <property-name>ontoggle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">toggle</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the node is toggle.
</description>
            <property-name>onbeforetoggle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforetoggle</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The type of the this component. More treeNodes could be defined in tree with different types and it is decided about
 which is used for rendering by nodeType expression of tree component.
</description>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Determines if this tree node is expanded. When EL expression used, it should use request-scoped variable with name defied
 in tree attribute 'var' which points to current node.
</description>
            <property-name>expanded</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTreeNode</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>treeNode</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeNodeHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TreeNode</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TreeNodeRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:message&amp;gt; component renders a single FacesMessage message instance added for the component. The
 appearance of the message can be customized, and tool-tips can be used for further information about the
 message.&lt;/p&gt;

 @author asmirnov@exadel.com
</description>
        <component-type>org.richfaces.Message</component-type>
        <component-class>org.richfaces.component.html.HtmlMessage</component-class>
        <property>
            <description>Defines, whether the content of this component must be (or not) included in AJAX response created by parent AJAX Container, even if it is not forced by reRender list of ajax action. Ignored if component marked to output by some Ajax action component. Default value - "true"</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that characters that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
            <display-name>Escape Characters Flag</display-name>
            <property-name>escape</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Client identifier of the component for which to display messages.
        </description>
            <display-name>Associated Client Id</display-name>
            <icon/>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the detail portion of displayed messages
            should be included. Default value is
            "true".
        </description>
            <display-name>Show Detail</display-name>
            <icon/>
            <property-name>showDetail</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the summary portion of displayed messages
            should be included. Default value is
            "false".
        </description>
            <display-name>Show Summary</display-name>
            <icon/>
            <property-name>showSummary</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMessage</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>message</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Message</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MessageRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> A component used to generate visual charts.

 @author Lukas Macko
</description>
        <component-type>org.richfaces.Chart</component-type>
        <component-class>org.richfaces.component.UIChart</component-class>
        <facet>
            <description>A set of JavaScript functions to modify the plotting process.</description>
            <facet-name>hooks</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript handler function for plothover event for each series. You can
 setup handler for particular series only. See series tag attribute
 onplothover.
</description>
            <property-name>onplothover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">plothover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A set of JavaScript functions to modify the plotting process.
</description>
            <property-name>hooks</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript handler function for plotclick event called for each series.
 You can setup handler for particular series only. See series tag
 attribute onplotclick.
</description>
            <property-name>onplotclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">plotclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Server-side listener for plotclick event.
</description>
            <property-name>plotClickListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>org.richfaces.model.PlotClickEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Complementary event for plothover fired when mouse leaves the chart grid.
</description>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute define whether zoom is enabled. To reset zoom you can use JS
 API $('#id').chart('resetZoom') Attribute is currently supported by line
 chart.
</description>
            <property-name>zoom</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChart</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chart</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.ChartTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:fires>
                <cdk:listener-class>org.richfaces.model.PlotClickListener</cdk:listener-class>
                <cdk:event-class>org.richfaces.model.PlotClickEvent</cdk:event-class>
            </cdk:fires>
            <cdk:component-family>org.richfaces.Chart</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ChartRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> The &lt;rich:treeModelAdaptor&gt; component takes an object which implements the Map or Iterable interfaces. It adds all the object entries to the parent node as child nodes.

 @author Nick Belaevski
</description>
        <component-type>org.richfaces.TreeModelAdaptor</component-type>
        <component-class>org.richfaces.component.UITreeModelAdaptor</component-class>
        <property>
            <description>
            Determines if tree node generated by model is leaf. Should contain EL expression which uses request-scoped
            variable with name defied in tree attribute 'var'.
        </description>
            <property-name>leaf</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            EL expression pointing to nodes which should tree model iterate over. Implementation of java.util.Map or
            java.util.List. When map is provided, map keys are used as keys for the model, otherwise, keys are generated. (In
            case of treeModelRecursiveAdaptor, nodes are defined recursively, starting with roots and
            continuing with inner nodes. EL expression should then use request-scoped variable with name defied
            in tree attribute 'var' to point to
            inner nodes recursively and return null or empty map/collection for leafs.)
        </description>
            <property-name>nodes</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.UITreeModelAdaptor</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>treeModelAdaptor</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeModelAdaptorHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TreeModelAdaptor</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:graphValidator&amp;gt; component is used to wrap a set of input components related to one object. The
 object defined by the &amp;lt;rich:graphValidator&amp;gt; component can then be completely validated. The validation includes
 all object properties, even those which are not bound to the individual form components. Validation performed in this
 way allows for cross-field validation in complex forms.&lt;/p&gt;
</description>
        <component-type>org.richfaces.GraphValidator</component-type>
        <component-class>org.richfaces.component.UIGraphValidator</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Message summary will be used in case in case of validation error when no other message is provided.
</description>
            <property-name>summary</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Bean EL reference to be validated
</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The list of fully-qualified names (FQNs) of classes determining bean-validation groups to be validated.
</description>
            <property-name>groups</property-name>
            <property-class>java.lang.Class[]</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The validator-id of validator used to process validation of the provided bean (Default value: org.richfaces.BeanValidator)
</description>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"org.richfaces.BeanValidator"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractGraphValidator</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>graphValidator</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.GraphValidatorHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.GraphValidator</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;amp;lt;r:inputNumberSlider&amp;amp;gt; component provides a slider for changing numerical values.
 Optional features include control arrows to step through the values,
 a tool-tip to display the value while sliding,
 and a text field for typing the numerical value which can then be validated against the slider's range.
 &lt;/p&gt;
</description>
        <component-type>org.richfaces.InputNumberSlider</component-type>
        <component-class>org.richfaces.component.html.HtmlInputNumberSlider</component-class>
        <property>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <property-name>accesskey</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when text within this element is selected by the user.</description>
            <display-name>Text Select Script</display-name>
            <property-name>onselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">select</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus and its value has been modified since gaining focus.</description>
            <display-name>Input Change Script</display-name>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A localized user presentable name for this component.</description>
            <display-name>Label</display-name>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the tooltip element of the handle
</description>
            <property-name>tooltipClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the increase arrow element selected
</description>
            <property-name>increaseSelectedClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies the maximum number of digits that could be entered into the input field.
 The maximum number is unlimited by default.
 If entered value exceeds the value specified in "maxValue" attribute than the slider takes a maximum value position.
</description>
            <property-name>maxlength</property-name>
            <property-class>java.lang.Integer</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute to set an "end" value.
 &lt;br /&gt;
 Default value is "100"
</description>
            <property-name>maxValue</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"100"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the increase arrow element
</description>
            <property-name>increaseClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If set to "false" this attribute makes the text field "read-only", so the value can be changed only from a handle. &amp;lt;br /&amp;gt;Default value is "true".
</description>
            <property-name>enableManualInput</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true"the current value is shown in the tooltip when a handle control is in a "dragged" state.
 &lt;br /&gt;
 Default value is "true".
</description>
            <property-name>showTooltip</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the decrease arrow element selected
</description>
            <property-name>decreaseSelectedClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Delay in pressed increase/decrease arrows in miliseconds. &amp;lt;br /&amp;gt;Default value is "200".
</description>
            <property-name>delay</property-name>
            <property-class>int</property-class>
            <default-value>200</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "right", the InputText Box would be rendered on the right side of the ruler.
 If "left", the InputText Box would be rendered on the left side of the ruler.
 If "top", the InputText Box would be rendered on the top of the ruler.
 If "bottom", the InputText Box would be rendered on the bottom of the ruler.
</description>
            <property-name>inputPosition</property-name>
            <property-class>org.richfaces.component.InputNumberSliderInputPosition</property-class>
            <default-value>InputNumberSliderInputPosition.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If the min/max values are shown on the right/left borders of a control.
 &lt;br /&gt;
 Default value is "true".
</description>
            <property-name>showBoundaryValues</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Tells how handle should look like. Possible values: arrow (default), bar
</description>
            <property-name>handleType</property-name>
            <property-class>org.richfaces.component.InputNumberSliderHandleType</property-class>
            <default-value>org.richfaces.component.InputNumberSliderHandleType.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the track slider element
</description>
            <property-name>trackClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Parameter that determines a step between the nearest values while using a handle.
 &lt;br /&gt;
 Default value is "1".
</description>
            <property-name>step</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"1"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the handle element selected
</description>
            <property-name>handleSelectedClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> False value for this attribute makes increase/decrease arrows invisible.
 &lt;br /&gt;
 Default value is "false".
</description>
            <property-name>showArrows</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute to set the "start" value.
 &lt;br /&gt;
 Default value is "0"
</description>
            <property-name>minValue</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"0"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component input field
</description>
            <property-name>inputClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Similar to the "Size" attribute of h:inputText.
 &lt;br /&gt;
 Default value is "3".
</description>
            <property-name>inputSize</property-name>
            <property-class>int</property-class>
            <default-value>3</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> False value for this attribute makes text a field invisible.
 &lt;br /&gt;
 Default value is "true".
</description>
            <property-name>showInput</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the handle element
</description>
            <property-name>handleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the decrease arrow element
</description>
            <property-name>decreaseClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractInputNumberSlider</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>inputNumberSlider</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Input</cdk:component-family>
            <cdk:renderer-type>org.richfaces.InputNumberSliderRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> Adds placeholder capability to HTML input and textarea elements. A placeholder typically appears as light gray text within an
 input or textarea element whenever the element is empty and does not have focus. This provides a hint to the user as to what
 the input or textarea element is used for, or the type of input that is required.
</description>
        <component-type>org.richfaces.Placeholder</component-type>
        <component-class>org.richfaces.component.UIPlaceholder</component-class>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The jQuery selector used to filter which child DOM elements will be a placeholder attached to.
</description>
            <property-name>selector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPlaceholder</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>placeholder</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Placeholder</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PlaceholderRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;Notifications emited by &amp;lt;rich:notify&amp;gt;, &amp;lt;rich:notifyMessage&amp;gt; and &amp;lt;rich:notifyMessages&amp;gt; are
 displayed in top-right corner of the screen by default.&lt;/p&gt; &lt;p&gt; It is &amp;lt;rich:notifyStack&amp;gt; which defines where
 messages will appear and handles their stacking. &lt;/p&gt;&lt;p&gt; Stack also provides way how to remove messages from screen -
 when stack is re-rendered, current notifications are destroyed, freeing place for new notifications.&lt;/p&gt;

 @author Bernard Labno
 @author &lt;a href="http://community.jboss.org/people/lfryc"&gt;Lukas Fryc&lt;/a&gt;
</description>
        <component-type>org.richfaces.NotifyStack</component-type>
        <component-class>org.richfaces.component.UINotifyStack</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines where new notifications will be added: first (start of the list, default) or last (end of the list).</description>
            <property-name>method</property-name>
            <property-class>org.richfaces.component.StackingMethod</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines the position of the start of stack: topLeft, topRight (default), bottomLeft, bottomRight</description>
            <property-name>position</property-name>
            <property-class>org.richfaces.component.CornerPosition</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines in which direction will be notification stacked: horizontal or vertical (default)</description>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.StackingDirection</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractNotifyStack</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>notifyStack</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.NotifyStack</cdk:component-family>
            <cdk:renderer-type>org.richfaces.NotifyStackRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:panelMenuItem&amp;gt; component represents a single item inside a &amp;lt;rich:panelMenuGroup&amp;gt; component,
 which is in turn part of a &amp;lt;rich:panelMenu&amp;gt; component.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.PanelMenuItem</component-type>
        <component-class>org.richfaces.component.UIPanelMenuItem</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the menu item when it is disabled
</description>
            <property-name>rightDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the menu group is selected
</description>
            <property-name>onbeforeselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu item when it is disabled
</description>
            <property-name>leftDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A localized user presentable name for this component.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the right icon of the panel menu item.
</description>
            <property-name>rightIconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the left icon of the panel menu item.
</description>
            <property-name>leftIconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel menu item when it is disabled.
</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu item label
</description>
            <property-name>leftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of this component
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the menu item label
</description>
            <property-name>rightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whenever the item is selectable. Default: true.
</description>
            <property-name>selectable</property-name>
            <property-class>java.lang.Boolean</property-class>
            <default-value>Boolean.TRUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Mode used for selecting of this item: default value is inherited from panelMenu
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.PanelMenuMode</property-class>
            <default-value>getPanelMenu().getItemMode()</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the menu group is selected
</description>
            <property-name>onselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">select</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPanelMenuItem</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>panelMenuItem</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.PanelMenuItem</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:jQuery&amp;gt; component applies styles and custom behavior to both JSF (JavaServer Faces) objects and
 regular DOM (Document Object Model) objects. It uses the jQuery JavaScript framework to add functionality to web
 applications.&lt;/p&gt;

 &lt;p&gt;This component is for use as a facelet tag.  See the &amp;lt;rich:jQuery&amp;gt; EL function for access to the jQuery library
 via EL.&lt;/p&gt;

 @author nick
</description>
        <component-type>org.richfaces.JQuery</component-type>
        <component-class>org.richfaces.component.UIJQuery</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The type of the attachment - decides about how is operation attached to the selected elements: "bind" (default - binds to
 the selected elements immediately, elements which could be matched by selector in the future won't be considered - offers
 a best performance), "live" (attach an event handler for all elements which match the current selector, now and in the
 future - may cause a slow performance), "one" (attach a handler to an event for the elements, the handler is executed at
 most once per element)
</description>
            <property-name>attachType</property-name>
            <property-class>org.richfaces.component.JQueryAttachType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The timing of the jQuery attachment: "domready" (when DOM is ready), "immediate" (immediately after component client-side
 code is processed). This attribute is ignored when attribute "name" is provided. Default value - "domready"
</description>
            <property-name>timing</property-name>
            <property-class>org.richfaces.component.JQueryTiming</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The query string that is executed for a given selector.
</description>
            <property-name>query</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of a function that will be generated to execute a query.
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The jQuery selector (subset of CSS selectors defined by W3C) of the element to which the jQuery function should be applied.

 ID selectors starting with hash sign (#) will be expanded from componentId to clientId form. (e.g. #component is expanded to #form:component in case that component is nested in form)
</description>
            <property-name>selector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The DOM event which should be the query bound to.
</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractJQuery</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>jQuery</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.JQuery</cdk:component-family>
            <cdk:renderer-type>org.richfaces.JQueryRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:tooltip&amp;gt; component provides an informational tool-tip. The tool-tip can be attached to any control
 and is displayed when hovering the mouse cursor over the control.&lt;/p&gt;

 @author amarkhel
</description>
        <component-type>org.richfaces.Tooltip</component-type>
        <component-class>org.richfaces.component.UITooltip</component-class>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed before the popup disappears.</description>
            <display-name>On Before Hide Script</display-name>
            <property-name>onbeforehide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforehide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed before this component is shown.</description>
            <display-name>On Before Show</display-name>
            <property-name>onbeforeshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Attribute is similar to the standard HTML attribute and can specify window placement relative to the content. Default value is "1000".</description>
            <property-name>zindex</property-name>
            <property-class>int</property-class>
            <default-value>1000</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets the vertical offset between pop-up list and mouse pointer. Default value is "10"
</description>
            <display-name>Vertical Offset</display-name>
            <property-name>verticalOffset</property-name>
            <property-class>int</property-class>
            <default-value>10</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the corner attachment point with which the popup should be connected. Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Joint Point</display-name>
            <property-name>jointPoint</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the direction of the popup.  Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Direction</display-name>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets the horizontal offset between pop-up list and mouse pointer. Default value is "10"
</description>
            <display-name>Horizontal Offset</display-name>
            <property-name>horizontalOffset</property-name>
            <property-class>int</property-class>
            <default-value>10</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Component ID of the target component or "null" if the component should be attached to the parent component.
</description>
            <property-name>target</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Block/inline mode flag. Possible value are: "inline" or "block". Default value is "inline". Tooltip will contain div/span
 elements respectively.
</description>
            <property-name>layout</property-name>
            <property-class>org.richfaces.TooltipLayout</property-class>
            <default-value>TooltipLayout.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Delay in milliseconds before tooltip will be hidden. Default value is "0"
</description>
            <property-name>hideDelay</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If the value of the "attached" attribute is "true", a component is attached to the parent component; if "false",
 component does not listen to activating browser events, but could be activated externally. Default value is "true"
</description>
            <property-name>attached</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Event that triggers the tooltip. Default value is "mouseenter"
</description>
            <property-name>showEvent</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"mouseenter"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Event that triggers the tooltip disappearance. Default value is "mouseleave"
</description>
            <property-name>hideEvent</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"mouseleave"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Delay in milliseconds before tooltip will be displayed. Default value is "0"
</description>
            <property-name>showDelay</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Controls the way of data loading to a tooltip. May have following values: "client" (default) and "ajax"
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.TooltipMode</property-class>
            <default-value>TooltipMode.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" tooltip should follow the mouse while it moves over the parent element. Default value is "true"
</description>
            <property-name>followMouse</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTooltip</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>tooltip</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Tooltip</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TooltipRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:inplaceSelect&amp;gt; component is similar to the &amp;lt;rich:inplaceInput&amp;gt; component, except that the
 &amp;lt;rich:inplaceSelect&amp;gt; component uses a drop-down selection box to enter text instead of a regular text field.
 Changes can be rendered either in-line or for the whole block, and inputs can be focused with keyboard navigation.
 The component is based on the JSF UISelectOne component, so all the standard rules for value definition, processing,
 conversion, and validation apply. &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.InplaceSelect</component-type>
        <component-class>org.richfaces.component.UIInplaceSelect</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The height of the list element (in pixels)</description>
            <property-name>listHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>listClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the selected list item. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>selectItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element when it is disabled. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The width of the list element (in pixels)</description>
            <property-name>listWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element when it is in the "active" state. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>activeClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list items. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Used to set the display text when value is undefined</description>
            <property-name>defaultLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element when it is in the "changed" state. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>changedClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the input element.
</description>
            <property-name>oninputkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element loses focus and its value has been modified since gaining focus.
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the list element.
</description>
            <property-name>onlistdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when text in the input element is selected
</description>
            <property-name>oninputselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The width of the input element
</description>
            <property-name>inputWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;The event on which to switch the component to the edit state&lt;/p&gt;
 &lt;p&gt;Default is "click"&lt;/p&gt;
</description>
            <property-name>editEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the list element.
</description>
            <property-name>onlistkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "false" do not switch the component to the edit state on "click"
</description>
            <property-name>openOnEdit</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the list element.
</description>
            <property-name>onlistmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the input element.
</description>
            <property-name>oninputclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element is shown
</description>
            <property-name>onlistshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" is set, buttons for confirming or canceling are added to the component
</description>
            <property-name>showControls</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the list element.
</description>
            <property-name>onlistmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element is hidden
</description>
            <property-name>onlisthide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listhide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the input element.
</description>
            <property-name>oninputdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the list element.
</description>
            <property-name>onlistmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the list element.
</description>
            <property-name>onlistmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the list element.
</description>
            <property-name>onlistmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the input element.
</description>
            <property-name>oninputmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the list element.
</description>
            <property-name>onlistclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the input element.
</description>
            <property-name>oninputmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the input element.
</description>
            <property-name>oninputkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the list element.
</description>
            <property-name>onlistkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the input element.
</description>
            <property-name>oninputmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> When "false" do not save the item as the new control value when the user selects an item from the drop-down list
</description>
            <property-name>saveOnSelect</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>  Defines whether the changes should apply when the focus is lost. Default value - "true"
</description>
            <property-name>saveOnBlur</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when an item is selected
</description>
            <property-name>onselectitem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">selectitem</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the list element.
</description>
            <property-name>onlistkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the input element.
</description>
            <property-name>oninputmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the input element.
</description>
            <property-name>oninputkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the input element.
</description>
            <property-name>oninputmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractInplaceSelect</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>inplaceSelect</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Select</cdk:component-family>
            <cdk:renderer-type>org.richfaces.InplaceSelectRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:collapsibleSubTableToggler&amp;gt; component provides a toggle control for the user to expand and
 collapse sub-tables. &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.CollapsibleSubTableToggler</component-type>
        <component-class>org.richfaces.component.UICollapsibleSubTableToggleControl</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon of the toggler when the sub-table is expanded
</description>
            <property-name>expandedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label of the toggler when the sub-table is expanded
</description>
            <property-name>expandedLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label of the toggler when the sub-table is collapsed
</description>
            <property-name>collapsedLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies table which will toggler control
</description>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon of the toggler when the sub-table is collapsed
</description>
            <property-name>collapsedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mouse event which toggler reacts to toggle the sub-table: click (default), dblclick, mousedown, mouseup, etc.
</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCollapsibleSubTableToggler</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>collapsibleSubTableToggler</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.CollapsibleSubTableToggler</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CollapsibleSubTableTogglerRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> The &amp;lt;rich:chartSeries&amp;gt; defines the data to be plotted in a chart. It represents
 the set of values with a common label. Data can be passed using attribute
 data. It expects ChartDataModel object. You can also use facelet iteration.

 @author Lukas Macko
</description>
        <component-type>org.richfaces.ui.output.Series</component-type>
        <component-class>org.richfaces.ui.output.component.UISeries</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Mouse over handler event for this series only.
</description>
            <property-name>onplothover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">plothover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript handler for plotclick event for this series only.
</description>
            <property-name>onplotclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">plotclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute define the color of data plotted.
</description>
            <property-name>color</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Server-side listener for plotclick event fired by this series only. Not
 implemented yet.
</description>
            <property-name>plotClickListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>org.richfaces.model.PlotClickEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Data passed into chart. If attribute is null, nested &amp;lt;s:point&amp;gt; tags
 are expected - facelet iteration.
</description>
            <property-name>data</property-name>
            <property-class>org.richfaces.model.ChartDataModel</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Description of data shown in a legend.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Point symbol for line chart Allowed values:
 &lt;ul&gt;
 &lt;li&gt;circle&lt;/li&gt;
 &lt;li&gt;square&lt;/li&gt;
 &lt;li&gt;cross&lt;/li&gt;
 &lt;li&gt;triangle&lt;/li&gt;
 &lt;li&gt;diamond&lt;/li&gt;
 &lt;/ul&gt;
</description>
            <property-name>symbol</property-name>
            <property-class>org.richfaces.component.AbstractChartSeries.SymbolType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attributes define type of a chart. Allowed values:
 &lt;ul&gt;
 &lt;li&gt;line&lt;/li&gt;
 &lt;li&gt;bar&lt;/li&gt;
 &lt;li&gt;pie&lt;/li&gt;
 &lt;/ul&gt;
</description>
            <property-name>type</property-name>
            <property-class>org.richfaces.model.ChartDataModel.ChartType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChartSeries</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chartSeries</cdk:tag-name>
                <cdk:handler-class>org.richfaces.model.SeriesHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:fires>
                <cdk:listener-class>org.richfaces.model.PlotClickListener</cdk:listener-class>
                <cdk:event-class>org.richfaces.model.PlotClickEvent</cdk:event-class>
            </cdk:fires>
            <cdk:component-family>org.richfaces.ui.output.ChartFamily</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:menuSeparator&amp;gt; component represents a separating divider in a menu control.&lt;/p&gt;
</description>
        <component-type>org.richfaces.MenuSeparator</component-type>
        <component-class>org.richfaces.component.UIMenuSeparator</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMenuSeparator</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>menuSeparator</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DropDownMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MenuSeparatorRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:panel&amp;gt; component is a bordered panel with an optional header.&lt;/p&gt;
</description>
        <component-type>org.richfaces.Panel</component-type>
        <component-class>org.richfaces.component.UIPanel</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel header.
</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel body.
</description>
            <property-name>bodyClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Provides the text on the panel header.
</description>
            <property-name>header</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>panel</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Panel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:collapsibleSubTable&amp;gt; component acts as a child element to a &amp;lt;rich:dataTable&amp;gt; component. The
 &amp;lt;rich:collapsibleSubTable&amp;gt; component iterates through the child collections in the currently iterated object to create
 master-detail tables.
 &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.CollapsibleSubTable</component-type>
        <component-class>org.richfaces.component.UICollapsibleSubTable</component-class>
        <facet>
            <description> The footer of the table
</description>
            <facet-name>footer</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The header of the table
</description>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The content to be displayed when table contains no rows (no data provided).
</description>
            <facet-name>noData</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Javascript code executed when a pointer button is moved away from table row.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onrowmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over table row.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onrowkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over table row.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onrowmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto table row.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onrowmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over table row.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onrowclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over table row.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onrowkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within table row.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onrowmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over table row.</description>
            <display-name>Double Click Script</display-name>
            <property-name>onrowdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over table row.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onrowmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over table row.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onrowkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The number of rows to display, or zero for all remaining rows in the table</description>
            <property-name>rows</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the header of the table</description>
            <display-name>Header first row CSS Classes</display-name>
            <property-name>headerFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the header of the table</description>
            <display-name>Header cell CSS Classes</display-name>
            <property-name>headerCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the subfooter of the table</description>
            <display-name>Subfooter cell CSS Classes</display-name>
            <property-name>columnFooterCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the footer of the table</description>
            <display-name>Footer first row CSS Classes</display-name>
            <property-name>footerFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the rows of the subfooter of the table</description>
            <display-name>Subfooter CSS Classes</display-name>
            <property-name>columnFooterClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the subheader of the table</description>
            <display-name>Subfooter first row CSS Classes</display-name>
            <property-name>firstColumnFooterClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the rows of the subheader of the table</description>
            <display-name>Subheader CSS Classes</display-name>
            <property-name>columnHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the footer of the table</description>
            <display-name>Footer cell CSS Classes</display-name>
            <property-name>footerCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the table</description>
            <display-name>Cell CSS Classes</display-name>
            <property-name>cellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the subheader of the table</description>
            <display-name>Subheader cell CSS Classes</display-name>
            <property-name>columnHeaderCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the table</description>
            <display-name>First row CSS Classes</display-name>
            <property-name>firstRowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the subheader of the table</description>
            <display-name>Subheader first row CSS Classes</display-name>
            <property-name>columnHeaderFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies when table will be sorted according to one column (single) or multiple columns (multi). Default value - "multi"
</description>
            <property-name>sortMode</property-name>
            <property-class>org.richfaces.model.SortMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any header generated for this column.</description>
            <display-name>Header CSS Classes</display-name>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the table cells
</description>
            <property-name>rowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any footer generated for this column.</description>
            <display-name>Footer CSS Classes</display-name>
            <property-name>footerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Comma-separated list of column names determining priority of row sorting.
</description>
            <property-name>sortPriority</property-name>
            <property-class>java.util.Collection</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies what mode will be used to expand the sub table: client (default), ajax, server, none (can't be expanded)
</description>
            <property-name>expandMode</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label to be displayed when table contains no rows (no data provided).
</description>
            <property-name>noDataLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of the variable used in EL expression provided in filterExpression in order to decide about displaying particular
 row.
</description>
            <property-name>filterVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the rows of the table. If the CSS class names are comma-separated, each class will be assigned to a particular row in the order they follow in the attribute.If you have less class names than rows, the class will be applied to every n-fold row where n is the order in which the class is listed in the attribute. If there are more class names than rows, the overflow ones are ignored.</description>
            <property-name>rowClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the columns of the table. If the CSS class names are comma-separated, each class will be assigned to a particular column in the order they follow in the attribute.If you have less class names than columns, the class will be applied to every n-fold column where n is the order in which the class is listed in the attribute. If there are more class names than columns, the overflow ones are ignored.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Determines the state of sub table: true (expanded), false (collapsed)
</description>
            <property-name>expanded</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCollapsibleSubTable</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>collapsibleSubTable</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.CollapsibleSubTableHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Data</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CollapsibleSubTableRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:togglePanelItem&amp;gt; component is a switchable panel for use with the &amp;lt;rich:togglePanel&amp;gt;
 component. Use the &amp;lt;rich:togglePanelItem&amp;gt; component to define the content for a panel using nested components.
 Switching between &amp;lt;rich:togglePanelItem&amp;gt; components is handled by the &amp;lt;rich:toggleControl&amp;gt; behavior.&lt;/p&gt;

 @author akolonitsky
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.TogglePanelItem</component-type>
        <component-class>org.richfaces.component.UITogglePanelItem</component-class>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse enters the panel
</description>
            <property-name>onenter</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">enter</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse leaves the panel.
</description>
            <property-name>onleave</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">leave</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch type for this toggle panel: client, ajax (default), server
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the panel, used for identifying and manipulating the active panel.
 If you do not specify a name, the clientId will be used as the name.
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTogglePanelItem</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>togglePanelItem</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TogglePanelItem</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TogglePanelItemRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:autocomplete&amp;gt; component is an auto-completing input-box with built-in Ajax capabilities. It
 supports client-side suggestions, browser-like selection, and customization of the look and feel.&lt;/p&gt;

 @author Nick Belaevski
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.Autocomplete</component-type>
        <component-class>org.richfaces.component.UIAutocomplete</component-class>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>  &lt;p&gt;Determine how the suggestion list is requested:&lt;/p&gt;
  &lt;dl&gt;
      &lt;dt&gt;client&lt;/dt&gt;
        &lt;dd&gt;pre-loads data to the client and uses the input to filter the possible suggestions&lt;/dd&gt;
      &lt;dt&gt;ajax&lt;/dt&gt;
        &lt;dd&gt;fetches suggestions with every input change using Ajax requests&lt;/dd&gt;
      &lt;dt&gt;lazyClient&lt;/dt&gt;
        &lt;dd&gt;
 lazy-loads data to the client and uses the input to filter the possible suggestions. The filtering does not start
 until the input length matches a minimum value. Set the minimum value with the minChars attribute.
        &lt;/dd&gt;
      &lt;dt&gt;cachedAjax&lt;/dt&gt;
        &lt;dd&gt;
 lazy-loads data via Ajax requests when the input length matches a minimum value. Set the minimum value with the
 minChars attribute. All suggestions are handled on the client until the input prefix is changed, at which point
 a new request is made based on the new input prefix
        &lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p&gt;Default: cachedAjax&lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.AutocompleteMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A collection of suggestions that will be provided to the user
</description>
            <property-name>autocompleteList</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the DOM is updated
</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before an ajax request.
</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A request-scope attribute via which the data object for the current row will be used when iterating
</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>true</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A method which provides a list of suggestions according to a user-provided filtering value
</description>
            <property-name>autocompleteMethod</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.String</cdk:param>
                    <cdk:return-type>java.lang.Object</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the ajax response comes back, but before the DOM is updated
</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of the request status component that will indicate the status of the Ajax request
</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Minimal number of chars in input to activate suggestion popup
</description>
            <property-name>minChars</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when this element loses focus and its value has been modified since gaining focus.
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over this element.
</description>
            <property-name>onlistdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Type of the layout encoded using nested components should be defined using layout attribute.
 Possible values are:
 &lt;/p&gt;
 &lt;dl&gt;
      &lt;dt&gt;list&lt;/dt&gt;
      &lt;dd&gt;suggestions wrapped to HTML unordered list&lt;/dd&gt;
      &lt;dt&gt;div&lt;/dt&gt;
      &lt;dd&gt;suggestions wrapped with just div element&lt;/dd&gt;
      &lt;dt&gt;table&lt;/dt&gt;
      &lt;dd&gt;suggestions are encoded as table rows, column definitions are required in this case&lt;/dd&gt;
 &lt;/dl&gt;
 &lt;p&gt;Default: div&lt;/p&gt;
</description>
            <property-name>layout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Boolean value indicating whether to display a button to expand the popup suggestion element&lt;/p&gt;
 &lt;p&gt;Default: false&lt;/p&gt;
</description>
            <property-name>showButton</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over this element.
</description>
            <property-name>onlistkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Causes the combo-box to fill the text field box with a matching suggestion as the user types
</description>
            <property-name>autofill</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over this element.
</description>
            <property-name>onlistmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over this element.
</description>
            <property-name>onlistmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto this element.
</description>
            <property-name>onlistmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within this element.
</description>
            <property-name>onlistmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the selected suggestion entry
</description>
            <property-name>selectedItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"rf-au-itm-sel"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from this element.
</description>
            <property-name>onlistmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the popup list element.
</description>
            <property-name>onlistclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the content of the popup suggestion element
</description>
            <property-name>popupClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Boolean value indicating whether the first suggestion item is selected as the user types
 &lt;p&gt;Default: true&lt;/p&gt;
</description>
            <property-name>selectFirst</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A value to set in the target input element on a choice suggestion that isn't shown in the suggestion table.
 It can be used for descriptive output comments or suggestions. If not set, all text in the suggestion row is set as a value
</description>
            <property-name>fetchValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 A javascript function used to filter the result list returned from the ajax call to the server.
 This function should have two parameters; subString(current input value considering tokens)
 and value (currently iterated item value) and return boolean flag which means if the value satisfies the substring passed.
 The function will be called for every available suggestion in order to construct a new list of suggestions.
 &lt;/p&gt;
 &lt;p&gt;Default: A javascript method called &lt;i&gt;startsWith&lt;/i&gt;&lt;/p&gt;
</description>
            <property-name>clientFilterFunction</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over this element.
</description>
            <property-name>onlistkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when an item is selected
</description>
            <property-name>onselectitem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">selectitem</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over this element.
</description>
            <property-name>onlistkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the input element
</description>
            <property-name>inputClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Allow a user to enter multiple values separated by specific characters. As the user types, a suggestion will
 present as normal. When they enter the specified token character, this begins a new suggestion process,
 and the component will then only use text entered after the token character for suggestions.&lt;/p&gt;

 &lt;p&gt;Make sure that no character defined in tokens is part of any suggestion value. E.g. do not use space as a token
 if you expect to allow spaces in suggestion values.&lt;/p&gt;

 &lt;p&gt;When tokens defined, they can be naturally separated by space character - input separated by tokens ', ' or ' ,'
 will be considered as it would be ',' token without any space.&lt;/p&gt;
</description>
            <property-name>tokens</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAutocomplete</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>autocomplete</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.AutocompleteHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Input</cdk:component-family>
            <cdk:renderer-type>org.richfaces.AutocompleteRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &lt;rich:treeModelRecursiveAdaptor&gt; component iterates through recursive collections in order to populate a tree
 with hierarchical nodes, such as for a file system with multiple levels of directories and files.&lt;/p&gt;

 @author Nick Belaevski
</description>
        <component-type>org.richfaces.TreeModelRecursiveAdaptor</component-type>
        <component-class>org.richfaces.component.UITreeModelRecursiveAdaptor</component-class>
        <property>
            <description>
            Determines if tree node generated by model is leaf. Should contain EL expression which uses request-scoped
            variable with name defied in tree attribute 'var'.
        </description>
            <property-name>leaf</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            EL expression pointing to nodes which should tree model iterate over. Implementation of java.util.Map or
            java.util.List. When map is provided, map keys are used as keys for the model, otherwise, keys are generated. (In
            case of treeModelRecursiveAdaptor, nodes are defined recursively, starting with roots and
            continuing with inner nodes. EL expression should then use request-scoped variable with name defied
            in tree attribute 'var' to point to
            inner nodes recursively and return null or empty map/collection for leafs.)
        </description>
            <property-name>nodes</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> EL expression pointing to top-level nodes (roots) which should tree model iterate over. Implementation of java.util.Map
 or java.util.List. When map is provided, map keys are used as keys for the model, otherwise, keys are generated.
</description>
            <property-name>roots</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.UITreeModelRecursiveAdaptor</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>treeModelRecursiveAdaptor</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeModelRecursiveAdaptorHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TreeModelRecursiveAdaptor</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:popupPanel&amp;gt; component provides a pop-up panel or window that appears in front of the rest of the
 application. The &amp;lt;rich:popupPanel&amp;gt; component functions either as a modal window which blocks interaction with
 the rest of the application while active, or as a non-modal window. It can be positioned on the screen, dragged to a
 new position by the user, and re-sized.&lt;/p&gt;
</description>
        <component-type>org.richfaces.PopupPanel</component-type>
        <component-class>org.richfaces.component.UIPopupPanel</component-class>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed before the popup disappears.</description>
            <display-name>On Before Hide Script</display-name>
            <property-name>onbeforehide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforehide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed before this component is shown.</description>
            <display-name>On Before Show</display-name>
            <property-name>onbeforeshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Attribute is similar to the standard HTML attribute and can specify window placement relative to the content. Default value is "100".</description>
            <property-name>zindex</property-name>
            <property-class>int</property-class>
            <default-value>100</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines the DOM element, which stacking context will assimilate the popupPanel. Possible values: "body", "form",
 "parent". Default value is "body".
</description>
            <property-name>domElementAttachment</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" there is possibility to move component. Default value is "true".
</description>
            <property-name>moveable</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" popupPanel will be auto-sized according to the content. Default value is "false".
</description>
            <property-name>autosized</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the popupPanel mask.
</description>
            <property-name>onmaskmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the popupPanel mask.
</description>
            <property-name>onmaskmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component header
</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> HTML CSS class attribute of element for pop-up suggestion content
</description>
            <property-name>shadowOpacity</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines min width of component. Default value is "10". If the value is less then 10, a
 "IllegalArgumentException" exception is thrown.
</description>
            <property-name>minWidth</property-name>
            <property-class>int</property-class>
            <default-value>-1</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button for context menu is clicked over the popupPanel mask.
</description>
            <property-name>onmaskcontextmenu</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskcontextmenu</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines X position of component left-top corner. Default value is "auto".
</description>
            <property-name>left</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns the header for the popupPanel.
</description>
            <property-name>header</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" there is possibility to change component size. Default value is "true".
</description>
            <property-name>resizeable</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whenever the popup will follow the scrolling of the screen. Default value is "true".
</description>
            <property-name>followByScroll</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component controls
</description>
            <property-name>controlsClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the popupPanel mask.
</description>
            <property-name>onmaskmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines width of component. Default value is "200".
</description>
            <property-name>width</property-name>
            <property-class>int</property-class>
            <default-value>-1</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the popupPanel mask.
</description>
            <property-name>onmaskmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the modal panel is moved
</description>
            <property-name>onmove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">move</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" popupPanel creates iframe to overlap embed objects like PDF on a page. Default value is "false".
</description>
            <property-name>overlapEmbedObjects</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the popupPanel mask.
</description>
            <property-name>onmaskdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" value for this attribute makes a modal panel opened as default. Default value is "false"
</description>
            <property-name>show</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Pop-up shadow depth for suggestion content
</description>
            <property-name>shadowDepth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the popupPanel mask.
</description>
            <property-name>onmaskclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the modal panel is resized
</description>
            <property-name>onresize</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">resize</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines min height of component. Default value is "10". If the value is less then 10, a
 "IllegalArgumentException" exception is thrown.
</description>
            <property-name>minHeight</property-name>
            <property-class>int</property-class>
            <default-value>-1</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines max height of component.
</description>
            <property-name>maxHeight</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines Y position of component left-top corner. Default value is "auto".
</description>
            <property-name>top</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the popupPanel mask.
</description>
            <property-name>onmaskmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">maskmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whether to trim or not elements inside popupPanel. Default value is "true"
</description>
            <property-name>trimOverlayedElements</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines max width of component.
</description>
            <property-name>maxWidth</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines height of component. Default value is "300".
</description>
            <property-name>height</property-name>
            <property-class>int</property-class>
            <default-value>-1</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true", popupPanel will be modal - it will block the main screen from any operation.
</description>
            <property-name>modal</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPopupPanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>popupPanel</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.PopupPanel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PopupPanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:menuGroup&amp;gt; component represents an expandable sub-menu in a menu control. The
 &amp;lt;rich:menuGroup&amp;gt; component can contain a number of &amp;lt;rich:menuItem&amp;gt; components, or further nested
 &amp;lt;rich:menuGroup&amp;gt; components.&lt;/p&gt;
</description>
        <component-type>org.richfaces.MenuGroup</component-type>
        <component-class>org.richfaces.component.UIMenuGroup</component-class>
        <facet>
            <facet-name>icon</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>iconDisabled</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the vertical offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Vertical Offset</display-name>
            <property-name>verticalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the corner attachment point with which the popup should be connected. Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Joint Point</display-name>
            <property-name>jointPoint</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the direction of the popup.  Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Direction</display-name>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the horizontal offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Horizontal Offset</display-name>
            <property-name>horizontalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text label for the menu item. Alternatively, use the label facet to define content for the label
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon to be displayed with the menu item
</description>
            <property-name>icon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon to be displayed with the menu item when it is disabled
</description>
            <property-name>iconDisabled</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMenuGroup</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>menuGroup</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DropDownMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MenuGroupRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:select&amp;gt; component provides a drop-down list box for selecting a single value from multiple options. The
 &amp;lt;rich:select&amp;gt; component can be configured as a combo-box, where it will accept typed input. The component also supports
 keyboard navigation. The &amp;lt;rich:select&amp;gt; component functions similarly to the JSF UISelectOne component.
 &lt;/p&gt;
 &lt;p&gt;
 The &amp;lt;rich:select&amp;gt; can optionally be used in an auto-completing mode, where the values in the drop-down list are provided
 dynamically using either the autocompleteMethod or autocompleteList attributes.  If these attributes are omitted, the component
 operates in the traditional non-auto-completing mode.  Refer to the individual attribute documentation to see which attributes are
 applicable only with an auto-completing select list.
 &lt;/p&gt;

 @author abelevich
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.Select</component-type>
        <component-class>org.richfaces.component.UISelect</component-class>
        <property>
            <description> Value to be returned to the server if the corresponding option is selected by the user.  Used only with an auto-completing select, where the list of items comes from either the
 autocompleteList or autocompleteMethod attributes.
</description>
            <property-name>itemValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Expose the values from either the autocompleteList or autocompleteMethod attributes under a request scoped key so that the values may be referred to in an EL expression while rendering this component.
 When using auto-completing select component this attribute is required.
</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>true</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Label to be displayed to the user for the corresponding option.  Used only with an auto-completing select, where the list of items comes from either the
 autocompleteList or autocompleteMethod attributes.
</description>
            <property-name>itemLabel</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The height of the list element (in pixels)</description>
            <property-name>listHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>listClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the selected list item. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>selectItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The width of the list element (in pixels)</description>
            <property-name>listWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list items. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Used to set the display text when value is undefined</description>
            <property-name>defaultLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>  &lt;p&gt;Determine how the suggestion list is requested:&lt;/p&gt;
  &lt;dl&gt;
      &lt;dt&gt;client&lt;/dt&gt;
        &lt;dd&gt;pre-loads data to the client and uses the input to filter the possible suggestions&lt;/dd&gt;
      &lt;dt&gt;ajax&lt;/dt&gt;
        &lt;dd&gt;fetches suggestions with every input change using Ajax requests&lt;/dd&gt;
      &lt;dt&gt;lazyClient&lt;/dt&gt;
        &lt;dd&gt;
 lazy-loads data to the client and uses the input to filter the possible suggestions. The filtering does not start
 until the input length matches a minimum value. Set the minimum value with the minChars attribute.
        &lt;/dd&gt;
      &lt;dt&gt;cachedAjax&lt;/dt&gt;
        &lt;dd&gt;
 lazy-loads data via Ajax requests when the input length matches a minimum value. Set the minimum value with the
 minChars attribute. All suggestions are handled on the client until the input prefix is changed, at which point
 a new request is made based on the new input prefix
        &lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p&gt;Default: cachedAjax&lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.AutocompleteMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A collection of suggestions that will be provided to the user
</description>
            <property-name>autocompleteList</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the DOM is updated. (Only valid in autocomplete mode).
</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before an ajax request. (Only valid in autocomplete mode).
</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A method which provides a list of suggestions according to a user-provided filtering value
</description>
            <property-name>autocompleteMethod</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.String</cdk:param>
                    <cdk:return-type>java.lang.Object</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the ajax response comes back, but before the DOM is updated. (Only valid in autocomplete mode).
</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of the request status component that will indicate the status of the Ajax request. (Only valid in autocomplete mode).
</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Minimal number of chars in input to activate suggestion popup
</description>
            <property-name>minChars</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element loses focus and its value has been modified since gaining focus.
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true" Allows the user to type into a text field to scroll through or filter the list.  Implicitly true when using an auto-completing select list.
 &lt;/p&gt;
 &lt;p&gt;
 Default is "false"
 &lt;/p&gt;
</description>
            <property-name>enableManualInput</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the list element.
</description>
            <property-name>onlistdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The minimum height ot the list
</description>
            <property-name>minListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 When "true" display a button to expand the popup list
 &lt;/p&gt;
 &lt;p&gt;
 Default is "true"
 &lt;/p&gt;
</description>
            <property-name>showButton</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the list element.
</description>
            <property-name>onlistkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the list element.
</description>
            <property-name>onlistmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element is shown
</description>
            <property-name>onlistshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the list element.
</description>
            <property-name>onlistmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the list element is hidden
</description>
            <property-name>onlisthide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listhide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the list element.
</description>
            <property-name>onlistmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the list element.
</description>
            <property-name>onlistmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the list element.
</description>
            <property-name>onlistmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the list element.
</description>
            <property-name>onlistclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true" as the user types to narrow the list, automatically select the first element in the list. Applicable only when
 enableManualInput is "true".
 &lt;/p&gt;
 &lt;p&gt;
 Default is "true"
 &lt;/p&gt;
</description>
            <property-name>selectFirst</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A javascript function used to filter the list of items in the select popup
</description>
            <property-name>clientFilterFunction</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The maximum height of the list
</description>
            <property-name>maxListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the list element.
</description>
            <property-name>onlistkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when an item is selected
</description>
            <property-name>onselectitem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">selectitem</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the list element.
</description>
            <property-name>onlistkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractSelect</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>select</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.AutocompleteHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Select</cdk:component-family>
            <cdk:renderer-type>org.richfaces.SelectRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 Focus component allows to set focus based on validation of components or alternatively it can preserve focus on currently
 focused form input.
 &lt;/p&gt;

 &lt;p&gt;
 Focus can be bound to form (in case of placement to h:form) or to whole view (when placed outside of forms) - in latter case,
 all forms will be managed by one Focus. There can be at most one Focus per form. When there is one view-scoped Focus and form
 defines own Focus, form-scoped Focus settings will be used.
 &lt;/p&gt;

 &lt;p&gt;
 Focus is applied each time the component is rendered - for each full page submit and for each partial page request (in case
 of ajaxRendered=true). Alternatively, you can use JavaScript API: &lt;tt&gt;applyFocus()&lt;/tt&gt; function will immediately cause.
 &lt;/p&gt;
</description>
        <component-type>org.richfaces.Focus</component-type>
        <component-class>org.richfaces.component.UIFocus</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whether focus state should be updated during each AJAX request automatically. (default: true)
</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whether focus should not be applied after initial page load, but will need to be triggered by JavaScript function
 from Focus API: &lt;tt&gt;applyFocus()&lt;/tt&gt; or via re-rendering (postback).
</description>
            <property-name>delayed</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whether focus should be preserved on last focused input before request was done (default: false)
</description>
            <property-name>preserve</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Defines if focus should respect validation of inputs.
 &lt;/p&gt;

 &lt;p&gt;
 If true, only invalid form fields will be focused when focus applied.
 &lt;/p&gt;

 &lt;p&gt;
 (default: true)
 &lt;/p&gt;
</description>
            <property-name>validationAware</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractFocus</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>focus</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Focus</cdk:component-family>
            <cdk:renderer-type>org.richfaces.FocusRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:panelMenu&amp;gt; component is used in conjunction with &amp;lt;rich:panelMenuItem&amp;gt; and
 &amp;lt;rich:panelMenuGroup&amp;gt; to create an expanding, hierarchical menu. The &amp;lt;rich:panelMenu&amp;gt; component's
 appearance can be highly customized, and the hierarchy can stretch to any number of sub-levels.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.PanelMenu</component-type>
        <component-class>org.richfaces.component.UIPanelMenu</component-class>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until the Invoke Application phase.</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If true (default), only one group can be expanded at the time. If false, many groups can be expanded.
</description>
            <property-name>expandSingle</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for disabled panel menu groups
</description>
            <property-name>groupDisabledLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to disabled top-level panel menu groups
</description>
            <property-name>topGroupDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to disabled top-level panel menu items
</description>
            <property-name>topItemDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for collapsed top-level panel menu groups
</description>
            <property-name>topGroupCollapsedLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to disabled panel menu groups
</description>
            <property-name>groupDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for disabled top-level panel menu items
</description>
            <property-name>topItemDisabledLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for expanded top-level panel menu groups
</description>
            <property-name>topGroupExpandedRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel menu items.
</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Holds the active panel name. This name is a reference to the name identifier of the active child
 &amp;lt;rich:panelMenuItem&amp;gt; or &amp;lt;rich:panelMenuGroup&amp;gt; component.
</description>
            <property-name>activeItem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for collapsed top-level panel menu groups
</description>
            <property-name>topGroupCollapsedRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for right menu items
</description>
            <property-name>itemRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to disables panel menu items.
</description>
            <property-name>itemDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to top-level panel menu groups
</description>
            <property-name>topGroupClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for expanded panel menu groups
</description>
            <property-name>groupExpandedRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for top-level panel menu items
</description>
            <property-name>topItemRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for disabled top-level panel menu groups
</description>
            <property-name>topGroupDisabledLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for panel menu items
</description>
            <property-name>itemLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for disabled panel menu groups
</description>
            <property-name>groupDisabledRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for panel menu items
</description>
            <property-name>itemDisabledRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to panel menu groups
</description>
            <property-name>groupClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mouse event used for expansion.
</description>
            <property-name>expandEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for expanded panel menu groups
</description>
            <property-name>groupExpandedLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for collapsed panel menu groups
</description>
            <property-name>groupCollapsedLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Method expression referencing a method that will be called when an ItemChangeEvent has been broadcast for the listener.
</description>
            <property-name>itemChangeListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mode user for selecting items: client, ajax (default), server
</description>
            <property-name>itemMode</property-name>
            <property-class>org.richfaces.PanelMenuMode</property-class>
            <default-value>PanelMenuMode.DEFAULT</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If true (default), selection of any item of group will cause selection of groups - predecessors - in the hierarchy. If
 false, only given item is selected.
</description>
            <property-name>bubbleSelection</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The width of the panel menu in pixels.
</description>
            <property-name>width</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for collapsed panel menu groups
</description>
            <property-name>groupCollapsedRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for disabled panel menu items
</description>
            <property-name>itemDisabledLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to top-level panel menu items
</description>
            <property-name>topItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for disabled top-level panel menu groups
</description>
            <property-name>topGroupDisabledRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mouse event used for collapsing.
</description>
            <property-name>collapseEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The right icon for disabled top-level panel menu items
</description>
            <property-name>topItemDisabledRightIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for expanded top-level panel menu groups
</description>
            <property-name>topGroupExpandedLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The left icon for top-level panel menu items
</description>
            <property-name>topItemLeftIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Mode used for expanding/collapsing groups: client (default), ajax, server
</description>
            <property-name>groupMode</property-name>
            <property-class>org.richfaces.PanelMenuMode</property-class>
            <default-value>PanelMenuMode.client</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPanelMenu</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>panelMenu</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.PanelMenuTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.PanelMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PanelMenuRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:columnGroup&amp;gt; component combines multiple columns in a single row to organize complex parts of a
 table. The resulting effect is similar to using the breakRowBefore attribute of the &amp;lt;rich:column&amp;gt; component,
 but is clearer and easier to follow in the source code.&lt;/p&gt;
</description>
        <component-type>org.richfaces.ColumnGroup</component-type>
        <component-class>org.richfaces.component.UIColumnGroup</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractColumnGroup</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>columnGroup</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ColumnGroup</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ColumnGroupRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:dataGrid&amp;gt; component is used to arrange data objects in a grid. Values in the grid can be updated
 dynamically from the data model, and Ajax updates can be limited to specific rows. The component supports header,
 footer, and caption facets. &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.DataGrid</component-type>
        <component-class>org.richfaces.component.UIDataGrid</component-class>
        <facet>
            <facet-name>footer</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>caption</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>noData</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any footer generated for this column.</description>
            <display-name>Footer CSS Classes</display-name>
            <property-name>footerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any header generated for this column.</description>
            <display-name>Header CSS Classes</display-name>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the columns of the table. If the CSS class names are comma-separated, each class will be assigned to a particular column in the order they follow in the attribute.If you have less class names than columns, the class will be applied to every n-fold column where n is the order in which the class is listed in the attribute. If there are more class names than columns, the overflow ones are ignored.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the rows of the table. If the CSS class names are comma-separated, each class will be assigned to a particular row in the order they follow in the attribute.If you have less class names than rows, the class will be applied to every n-fold row where n is the order in which the class is listed in the attribute. If there are more class names than rows, the overflow ones are ignored.</description>
            <property-name>rowClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Number of columns to display
</description>
            <property-name>columns</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Number of elements displayed in the grid
</description>
            <property-name>elements</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDataGrid</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dataGrid</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.DataGridHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Data</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DataGridRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:toolbar&amp;gt; component is a horizontal toolbar. Any JavaServer Faces (JSF) component can be added to the
 toolbar.&lt;/p&gt;
</description>
        <component-type>org.richfaces.Toolbar</component-type>
        <component-class>org.richfaces.component.UIToolbar</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;A separator between items on a bar. Possible values are "none", "line", "square", "disc" and "grid".&lt;/p&gt;
 &lt;p&gt;Default value is "none".&lt;/p&gt;
</description>
            <property-name>itemSeparator</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved within an item
</description>
            <property-name>onitemmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved away from an item
</description>
            <property-name>onitemmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when the item element is rendered. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>itemStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed and released over an item
</description>
            <property-name>onitemkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed down over the element
</description>
            <property-name>onitemkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved onto an item
</description>
            <property-name>onitemmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an item is double-clicked
</description>
            <property-name>onitemdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is pressed down over an item
</description>
            <property-name>onitemmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> CSS style(s) to be applied when the item elements are rendered.
</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an item is clicked
</description>
            <property-name>onitemclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;A width of a bar that can be defined in pixels or as percentage.&lt;/p&gt;
 &lt;p&gt; Default value is "100%".&lt;/p&gt;
</description>
            <property-name>width</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is released
</description>
            <property-name>onitemkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is released over an item
</description>
            <property-name>onitemmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A height of a bar in pixels. If a height is not defined, a bar height depends of the "headerFontSize" skin parameter.
</description>
            <property-name>height</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractToolbar</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>toolbar</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Toolbar</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ToolbarRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:dataScroller&amp;gt; component is used for navigating through multiple pages of tables or grids. &lt;/p&gt;
</description>
        <component-type>org.richfaces.DataScroller</component-type>
        <component-class>org.richfaces.component.UIDataScroller</component-class>
        <facet>
            <facet-name>next</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>first</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>previous</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>last</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>fastRewind</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>fastForward</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <property-name>scrollListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Maximum quantity of pages. Default value is "10".
</description>
            <property-name>maxPages</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Component ID of the table whose data is scrolled
</description>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute specifies the visibility of stepControls. Possible values are: "show" (controls are always visible ).
 "hide" (controls are hidden. "auto" (unnecessary controls are hidden). Default value is "show".
</description>
            <property-name>stepControls</property-name>
            <property-class>org.richfaces.component.DataScrollerControlsMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If renderIfSinglePage is "true" then datascroller is displayed on condition that the data hold on one page. Default value
 is "true".
</description>
            <property-name>renderIfSinglePage</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute to control whether last page of datascroller shows "rows" number of items or just the rest. Possible values
 are "full" and "short". Default value is "short".
</description>
            <property-name>lastPageMode</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute specifies the visibility of fastControls. Possible values are: "show" (controls are always visible ).
 "hide" (controls are hidden. "auto" (unnecessary controls are hidden). Default value is "show".
</description>
            <property-name>fastControls</property-name>
            <property-class>org.richfaces.component.DataScrollerControlsMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute specifies the visibility of boundaryControls. Possible values are: "show" (controls are always visible ).
 "hide" (controls are hidden. "auto" (unnecessary controls are hidden). Default value is "show".
</description>
            <property-name>boundaryControls</property-name>
            <property-class>org.richfaces.component.DataScrollerControlsMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If page &gt;= 1 then it's a page number to show
</description>
            <property-name>page</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute indicates pages quantity to switch onto when fast scrolling is used. Default value is "1".

 @return
</description>
            <property-name>fastStep</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDataScroller</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dataScroller</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.DataScrollerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DataScroller</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DataScrollerRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:list&amp;gt; component renders a list of items. The list can be an numerically ordered list, an
 un-ordered bullet-point list, or a data definition list. The component uses a data model for managing the list items,
 which can be updated dynamically.&lt;/p&gt;
</description>
        <component-type>org.richfaces.List</component-type>
        <component-class>org.richfaces.component.UIList</component-class>
        <facet>
            <facet-name>term</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from table row.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onrowmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over table row.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onrowkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over table row.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onrowmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto table row.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onrowmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over table row.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onrowclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over table row.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onrowkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within table row.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onrowmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over table row.</description>
            <display-name>Double Click Script</display-name>
            <property-name>onrowdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over table row.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onrowmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over table row.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onrowkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The number of rows to display, or zero for all remaining rows in the table</description>
            <property-name>rows</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the list rows
</description>
            <property-name>rowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the rows of the table. If the CSS class names are comma-separated,
 each class will be assigned to a particular row in the order they follow in the attribute. If you have less class names
 than rows, the class will be applied to every n-fold row where n is the order in which the class is listed in the
 attribute. If there are more class names than rows, the overflow ones are ignored.
</description>
            <property-name>rowClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The type of the list: unordered (default), ordered, definitions
</description>
            <property-name>type</property-name>
            <property-class>org.richfaces.component.ListType</property-class>
            <default-value>ListType.unordered</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractList</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>list</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.ListHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.List</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ListRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
     The &amp;lt;rich:dropTarget&amp;gt; component can be added to a component so that the component can accept dragged items.
     The dragged items must be defined with a compatible drop type for the &amp;lt;rich:dragSource&amp;gt; component.
 &lt;/p&gt;
 @author abelevich
</description>
        <component-type>org.richfaces.DropTarget</component-type>
        <component-class>org.richfaces.component.UIDropTarget</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until the Invoke Application phase.</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> MethodExpression representing an action listener method that will be notified after drop operation.
 The expression must evaluate to a public method that takes an DropEvent parameter, with a return type of void,
 or to a public method that takes no arguments with a return type of void.
 In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in
 cases where a notification is needed that "some action happened".
</description>
            <property-name>dropListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Data to be processed after a drop event
</description>
            <property-name>dropValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A list of drag zones types, which elements are accepted by a drop zone
</description>
            <property-name>acceptedTypes</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDropTarget</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dropTarget</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.DropHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DropTarget</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DropTargetRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:toolbarGroup&amp;gt; component is a child component of the &amp;lt;rich:toolbar&amp;gt; component. The
 &amp;lt;rich:toolbarGroup&amp;gt; component is used to group a number of items together on a toolbar.&lt;/p&gt;
</description>
        <component-type>org.richfaces.ToolbarGroup</component-type>
        <component-class>org.richfaces.component.UIToolbarGroup</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;A separator between items on a bar. Possible values are "none", "line", "square", "disc" and "grid".&lt;/p&gt;
 &lt;p&gt;Default value is "none".&lt;/p&gt;
</description>
            <property-name>itemSeparator</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved within an item
</description>
            <property-name>onitemmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved away from an item
</description>
            <property-name>onitemmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when the item element is rendered. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>itemStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed and released over an item
</description>
            <property-name>onitemkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed down over the element
</description>
            <property-name>onitemkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved onto an item
</description>
            <property-name>onitemmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an item is double-clicked
</description>
            <property-name>onitemdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is pressed down over an item
</description>
            <property-name>onitemmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> CSS style(s) to be applied when the item elements are rendered.
</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an item is clicked
</description>
            <property-name>onitemclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Location of the toolbar items in the parent toolbar.  Can be one of "left" or "right"&lt;/p&gt;
 &lt;p&gt;Default is "left"&lt;/p&gt;
</description>
            <property-name>location</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is released
</description>
            <property-name>onitemkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is released over an item
</description>
            <property-name>onitemmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractToolbarGroup</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>toolbarGroup</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Toolbar</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ToolbarGroupRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:messages&amp;gt; components works similarly to the &amp;lt;rich:message&amp;gt; component, but can display all
 the validation messages added for the current view instead of just a single message.&lt;/p&gt;

 @author asmirnov@exadel.com
</description>
        <component-type>org.richfaces.Messages</component-type>
        <component-class>org.richfaces.component.html.HtmlMessages</component-class>
        <property>
            <description>Defines, whether the content of this component must be (or not) included in AJAX response created by parent AJAX Container, even if it is not forced by reRender list of ajax action. Ignored if component marked to output by some Ajax action component. Default value - "true"</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that characters that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
            <display-name>Escape Characters Flag</display-name>
            <property-name>escape</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Client identifier of the component for which to display messages. This
            attribute is mutually exclusive with
            globalOnly and take precedence
            if used.
        </description>
            <display-name>Associated Client Id</display-name>
            <icon/>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that only global messages (that is, messages not
            associated with any client identifier) are
            to be displayed.
            Default value is "false".
        </description>
            <display-name>Global Only</display-name>
            <icon/>
            <property-name>globalOnly</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the detail portion of displayed messages
            should be included. Default value is
            "false".
        </description>
            <display-name>Show Detail</display-name>
            <icon/>
            <property-name>showDetail</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the summary portion of displayed messages
            should be included. Default value is
            "true".
        </description>
            <display-name>Show Summary</display-name>
            <icon/>
            <property-name>showSummary</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMessages</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>messages</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Messages</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MessagesRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:notify&amp;gt; component serves for advanced user interaction, using notification boxes to give the user instant
 feedback on what's happening within the application. Each time this component is rendered, a floating notification box is
 displayed in the selected corner of the browser screen.
 &lt;/p&gt;

 @author &lt;a href="http://community.jboss.org/people/lfryc"&gt;Lukas Fryc&lt;/a&gt;
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.Notify</component-type>
        <component-class>org.richfaces.component.UINotify</component-class>
        <facet>
            <description>Summary of the notification message</description>
            <facet-name>summary</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description>Detail of the notification message</description>
            <facet-name>detail</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Defines whether the shadow under notification should be displayed</description>
            <property-name>showShadow</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines opacity of non-blocking notifications</description>
            <property-name>nonblockingOpacity</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines how long will notification stay displayed after appearing</description>
            <property-name>stayTime</property-name>
            <property-class>java.lang.Integer</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the notification should fade when hovering and allow to click elements behind</description>
            <property-name>nonblocking</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the close button should be displayed</description>
            <property-name>showCloseButton</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, notifications have to be closed with the close button (overrides @showCloseButton)</description>
            <property-name>sticky</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines which stack will be notification bound to</description>
            <property-name>stack</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that characters that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
            <display-name>Escape Characters Flag</display-name>
            <property-name>escape</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Summary of the notification message</description>
            <property-name>summary</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Detail of the notification message</description>
            <property-name>detail</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractNotify</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>notify</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Notify</cdk:component-family>
            <cdk:renderer-type>org.richfaces.NotifyRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> The &amp;lt;rich:chartXAxis&amp;gt; tag
 @author Lukas Macko
</description>
        <component-type>org.richfaces.ui.output.XAxis</component-type>
        <component-class>org.richfaces.ui.output.component.UIXAxis</component-class>
        <property>
            <description> Minimum value shown on the axis.
</description>
            <property-name>min</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Maximum value of the axis
</description>
            <property-name>max</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Itâ€™s the fraction of margin that the scaling algorithm will add to avoid
 that the outermost points ends up on the grid border.
</description>
            <property-name>pad</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Format for axis ticks (Date series only)
</description>
            <property-name>format</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Text shown next to axis.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChartXAxis</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chartXAxis</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ui.output.ChartFamily</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:orderingList&amp;gt; is a component for ordering items in a list (client-side).&lt;/p&gt;
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.OrderingList</component-type>
        <component-class>org.richfaces.component.UIOrderingList</component-class>
        <property>
            <description>Value to be returned to the server if the corresponding option is selected by the user.  Used with the var attribute to build the selectItems</description>
            <property-name>itemValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Expose the value from the value attribute under this request scoped key so that it may be referred to in EL for the value of other attributes.</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Label to be displayed to the user for the corresponding option.</description>
            <property-name>itemLabel</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The height of the list element (in pixels)</description>
            <property-name>listHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the selected list item. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>selectItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when the list element loses focus and its value has been modified since gaining focus.</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The maximum height of the item list (in pixels).</description>
            <property-name>maxListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the header element. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element when it is disabled. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the columns of the list elements. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The width of the list element (in pixels)</description>
            <property-name>listWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The minimum height of the item list (in pixels).</description>
            <property-name>minListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list items. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Optional attribute that is a literal string that is the fully qualified class name of a concrete class that implements java.util.List, or an EL expression that evaluates to either 1. such a String, or 2. the Class object itself.</description>
            <property-name>collectionType</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-down button
</description>
            <property-name>downText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2193 Down"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the list element .
</description>
            <property-name>onlistdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-to-bottom button
</description>
            <property-name>downBottomText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D3 Last"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the list element .
</description>
            <property-name>onlistkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the list element .
</description>
            <property-name>onlistmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the list element .
</description>
            <property-name>onlistmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the list element .
</description>
            <property-name>onlistmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the list element .
</description>
            <property-name>onlistmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the list element .
</description>
            <property-name>onlistmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-to-top button
</description>
            <property-name>upTopText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D1 First"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the list element .
</description>
            <property-name>onlistclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the list element .
</description>
            <property-name>onlistkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text placed above the list of items
</description>
            <property-name>caption</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the list element .
</description>
            <property-name>onlistkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-up button
</description>
            <property-name>upText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2191 Up"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractOrderingList</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>orderingList</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.SelectMany</cdk:component-family>
            <cdk:renderer-type>org.richfaces.OrderingListRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:accordionItem&amp;gt; component is a panel for use with the &amp;lt;rich:accordion&amp;gt; component.
 &amp;lt;rich:accordionItem&amp;gt; components can be added dynamically using iteration models with the &amp;lt;c:forEach&amp;gt;
 tag.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.AccordionItem</component-type>
        <component-class>org.richfaces.component.UIAccordionItem</component-class>
        <property>
            <description> Javascript code executed when a pointer button is released over the header of this element.
</description>
            <property-name>onheadermouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the header of this element.
</description>
            <property-name>onheadermousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header
</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"getAccordion().getItemHeaderClass()"</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the header of this element.
</description>
            <property-name>onheadermousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the header of this element.
</description>
            <property-name>onheaderdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headerdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the header of this element.
</description>
            <property-name>onheaderclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headerclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is disabled
</description>
            <property-name>headerDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel content
</description>
            <property-name>contentClass</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"getAccordion().getItemContentClass()"</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS style applied to the header
</description>
            <property-name>headerStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse enters the panel
</description>
            <property-name>onenter</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">enter</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is inactive
</description>
            <property-name>headerInactiveClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is active
</description>
            <property-name>headerActiveClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse leaves the panel.
</description>
            <property-name>onleave</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">leave</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is disabled
</description>
            <property-name>rightDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is not active
</description>
            <property-name>leftDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Provides the text on the panel header. The panel header is all that is visible when the accordion item is collapsed.
 &lt;/p&gt;
 &lt;p&gt;
 Alternatively the header facet could be used in place of the header attribute.
 This would allow for additional styles and custom content to be applied to the tab.
 &lt;/p&gt;
</description>
            <property-name>header</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the panel, used for identifying and manipulating the active panel.
 If you do not specify a name, the clientId will be used as the name.
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is disabled
</description>
            <property-name>leftInactiveIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch mode when a panel is activated.  One of: "client", "server", "ajax". Default: "ajax"
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is active
</description>
            <property-name>leftActiveIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is not active
</description>
            <property-name>rightInactiveIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is active
</description>
            <property-name>rightActiveIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAccordionItem</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>accordionItem</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.AccordionItem</cdk:component-family>
            <cdk:renderer-type>org.richfaces.AccordionItemRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:fileUpload&amp;gt; component allows the user to upload files to a server. It features multiple uploads, progress
 bars, restrictions on file types, and restrictions on sizes of the files to be uploaded.
 &lt;/p&gt;

 @author Konstantin Mishin
 @author Lukas Fryc
 @author Simone Cinti
</description>
        <component-type>org.richfaces.FileUpload</component-type>
        <component-class>org.richfaces.component.UIFileUpload</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an error has occurred during Ajax communications
</description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">error</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file is submitted
</description>
            <property-name>onfilesubmit</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">filesubmit</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file is cleared
</description>
            <property-name>onclear</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">clear</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label for the Clear button.
</description>
            <property-name>clearAllLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file is selected
</description>
            <property-name>onfileselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">fileselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true" duplicate file uploads are prevented
 &lt;/p&gt;
 &lt;p&gt;
 Default is "false"
 &lt;/p&gt;
</description>
            <property-name>noDuplicate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 If "true" upload stats immediately after file selection
 &lt;/p&gt;
 &lt;p&gt;
 Default is "false"
 &lt;/p&gt;
</description>
            <property-name>immediateUpload</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines the maximum allowed size of a file. Files exceeding the size will not be added in the component.
 Default value is equal to 'org.richfaces.fileUpload.maxRequestSize' context parameter if it is set, otherwise 0 (no limit).
</description>
            <property-name>maxFileSize</property-name>
            <property-class>long</property-class>
            <default-value>0L</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A listener function on the server side after each file is uploaded. The listener should process files as required, such
 as storing them in the session/db/filesystem/ directory. The component itself does not store uploaded files, so if the
 listener is not implemented they are not stored anywhere
</description>
            <property-name>fileUploadListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file does not meet the conditions stated by acceptedTypes parameter.
</description>
            <property-name>ontyperejected</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">typerejected</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file upload is complete
</description>
            <property-name>onuploadcomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">uploadcomplete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Defines height of file list.
 &lt;/p&gt;
 &lt;p&gt;
 Default value is "210px".
 &lt;/p&gt;
</description>
            <property-name>listHeight</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"210px"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label displayed for the Delete link
</description>
            <property-name>deleteLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines maximum number of files allowed to be uploaded. After a number of files in the list equals to the value of this
 attribute, "Add" button disappears and nothing could be uploaded even if you clear the whole list. In order to upload
 files again you should rerender the component. (Negative numbers means no limits; default value -1).
</description>
            <property-name>maxFilesQuantity</property-name>
            <property-class>java.lang.Integer</property-class>
            <default-value>-1</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label for the Add button.
</description>
            <property-name>addLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label displayed when a file is successfully uploaded.
</description>
            <property-name>doneLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a file exceeds the allowed size defined by maxFileSize parameter
  or 'org.richfaces.fileUpload.maxRequestSize' context parameter.
</description>
            <property-name>onsizerejected</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">sizerejected</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label for the Upload button.
</description>
            <property-name>uploadLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label displayed for the Clear link
</description>
            <property-name>clearLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines comma separated list of file extensions accepted by component. The format of the file extension can be "png" or
 ".png", the second format will filter extensions in the dialog window. The component does not provide any feedback when
 rejecting file. For introducing feedback for rejection, use ontyperejected parameter.
</description>
            <property-name>acceptedTypes</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label displayed when a file upload fails due to a server error.
</description>
            <property-name>serverErrorLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label displayed when a file exceeds the size limit.
</description>
            <property-name>sizeExceededLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractFileUpload</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>fileUpload</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.FileUploadHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.FileUpload</cdk:component-family>
            <cdk:renderer-type>org.richfaces.FileUploadRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:notifyMessages&amp;gt; component is the same as the &amp;lt;rich:notifyMessage&amp;gt; component, but each of
 the available messages generates one notification. &lt;/p&gt;

 @author &lt;a href="http://community.jboss.org/people/lfryc"&gt;Lukas Fryc&lt;/a&gt;
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.NotifyMessages</component-type>
        <component-class>org.richfaces.component.html.HtmlNotifyMessages</component-class>
        <property>
            <description>Defines whether the shadow under notification should be displayed</description>
            <property-name>showShadow</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines opacity of non-blocking notifications</description>
            <property-name>nonblockingOpacity</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines how long will notification stay displayed after appearing</description>
            <property-name>stayTime</property-name>
            <property-class>java.lang.Integer</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the notification should fade when hovering and allow to click elements behind</description>
            <property-name>nonblocking</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the close button should be displayed</description>
            <property-name>showCloseButton</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, notifications have to be closed with the close button (overrides @showCloseButton)</description>
            <property-name>sticky</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines which stack will be notification bound to</description>
            <property-name>stack</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines, whether the content of this component must be (or not) included in AJAX response created by parent AJAX Container, even if it is not forced by reRender list of ajax action. Ignored if component marked to output by some Ajax action component. Default value - "true"</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that characters that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
            <display-name>Escape Characters Flag</display-name>
            <property-name>escape</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Client identifier of the component for which to display messages. This
            attribute is mutually exclusive with
            globalOnly and take precedence
            if used.
        </description>
            <display-name>Associated Client Id</display-name>
            <icon/>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that only global messages (that is, messages not
            associated with any client identifier) are
            to be displayed.
            Default value is "false".
        </description>
            <display-name>Global Only</display-name>
            <icon/>
            <property-name>globalOnly</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the detail portion of displayed messages
            should be included. Default value is
            "false".
        </description>
            <display-name>Show Detail</display-name>
            <icon/>
            <property-name>showDetail</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the summary portion of displayed messages
            should be included. Default value is
            "true".
        </description>
            <display-name>Show Summary</display-name>
            <icon/>
            <property-name>showSummary</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractNotifyMessages</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>notifyMessages</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Messages</cdk:component-family>
            <cdk:renderer-type>org.richfaces.NotifyMessagesRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;r:hashParam&amp;gt; component allows client-side parameters to be grouped into a hash map. The hash map can
 then be passed to the client JavaScript API functions of any RichFaces component.&lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.HashParameter</component-type>
        <component-class>org.richfaces.component.UIHashParameter</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the javascript hash property which this hash should be assigned to (can be used as nested hashParameter) or
 null if no property should be used (can be used simply as function parameter).
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.UIHashParameter</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>hashParam</cdk:tag-name>
                <cdk:handler-class>javax.faces.view.facelets.ComponentHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.HashParameter</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:hotKey&amp;gt; component allows registering hot keys on the page or particular elements and defining
 client side processing functions for these keys.&lt;/p&gt;

 @author ilya_shaikovsky
 @author Lukas Fryc
</description>
        <component-type>org.richfaces.HotKey</component-type>
        <component-class>org.richfaces.component.UIHotKey</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Event handler to be fired when registered key sequence is pressed up</description>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Event handler to be fired when registered key sequence is pressed down</description>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The jQuery selector (subset of CSS selectors defined by W3C) of the DOM root from which key events should be handled. When no value provided, events are handled for whole document. ID selectors starting with hash sign (#) will be expanded from componentId to clientId form. (e.g. #component is expanded to #form:component in case that component is nested in form)</description>
            <property-name>selector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The switch which enables handling events coming from input. Default value - "false"</description>
            <property-name>enabledInInput</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The key sequence to be pressed, single keys separated by + (e.g. 'ctrl+a'), more key sequences separated by space. Special keys are accepted as follows: backspace, tab, return, shift, ctrl, alt, pause, capslock, esc, space, pageup, pagedown, end, home, left, up, right, down, insert, del, numlock, scroll, meta, f1, f2, ..., f12</description>
            <property-name>key</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The switch which prevents native browser actions (prevents default) to be taken and stops event propagation up to the tree. Default value - "true"</description>
            <property-name>preventDefault</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractHotKey</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>hotKey</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.HotKey</cdk:component-family>
            <cdk:renderer-type>org.richfaces.HotKeyRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:extendedDataTable&amp;gt; component builds on the functionality of the &amp;lt;rich:dataTable&amp;gt; component,
 adding features such as scrolling for the table body (both horizontal and vertical), Ajax loading for vertical
 scrolling, frozen columns, row selection, and rearranging of columns. It also supports all the basic table features
 such as sorting, filtering, and paging using the &amp;lt;rich:dataScroller&amp;gt; component. &lt;/p&gt;

 @author Konstantin Mishin
</description>
        <component-type>org.richfaces.ExtendedDataTable</component-type>
        <component-class>org.richfaces.component.UIExtendedDataTable</component-class>
        <facet>
            <description> The footer of the table
</description>
            <facet-name>footer</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The header of the table
</description>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The content to be displayed when table contains no rows (no data provided).
</description>
            <facet-name>noData</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Javascript code executed when a pointer button is moved away from table row.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onrowmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over table row.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onrowkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over table row.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onrowmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto table row.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onrowmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over table row.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onrowclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over table row.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onrowkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within table row.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onrowmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over table row.</description>
            <display-name>Double Click Script</display-name>
            <property-name>onrowdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over table row.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onrowmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over table row.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onrowkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The number of rows to display, or zero for all remaining rows in the table</description>
            <property-name>rows</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies when table will be sorted according to one column (single) or multiple columns (multi). Default value - "multi"
</description>
            <property-name>sortMode</property-name>
            <property-class>org.richfaces.model.SortMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any header generated for this column.</description>
            <display-name>Header CSS Classes</display-name>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the table cells
</description>
            <property-name>rowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any footer generated for this column.</description>
            <display-name>Footer CSS Classes</display-name>
            <property-name>footerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Comma-separated list of column names determining priority of row sorting.
</description>
            <property-name>sortPriority</property-name>
            <property-class>java.util.Collection</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The collection of keys for currently selected table rows (generated from data model by rowKeyConverter).
</description>
            <property-name>selection</property-name>
            <property-class>java.util.Collection</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Use to switch Extended Data Table to AJAX lazy-loading mode. Specify number of rows rows to be loaded with one request.
 If this attribute is set to "0", all rows are loaded. (Default value: 0)
</description>
            <property-name>clientRows</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label to be displayed when table contains no rows (no data provided).
</description>
            <property-name>noDataLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of the variable used in EL expression provided in filterExpression in order to decide about displaying particular
 row.
</description>
            <property-name>filterVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines selection mode for the table: none, single (only one row can be selected), multiple (Ctrl/Shift keys are used for
 multi-selection), multipleKeyboardFree (clicks are used for multi-selection). Default value - "multiple"
</description>
            <property-name>selectionMode</property-name>
            <property-class>org.richfaces.model.SelectionMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Determines the order in which the columns should be rendered, left to right.
 The Strings are the ids of the columns.
</description>
            <property-name>columnsOrder</property-name>
            <property-class>java.lang.String[]</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> ValueBinding pointing at a property of a String to hold table state
</description>
            <property-name>tableState</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the rows of the table. If the CSS class names are comma-separated, each class will be assigned to a particular row in the order they follow in the attribute.If you have less class names than rows, the class will be applied to every n-fold row where n is the order in which the class is listed in the attribute. If there are more class names than rows, the overflow ones are ignored.</description>
            <property-name>rowClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the selection is changed.
</description>
            <property-name>onbeforeselectionchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeselectionchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the selection is changed.
</description>
            <property-name>onselectionchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">selectionchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Determines how many columns should not be vertically scrollable (should be "frozen").
</description>
            <property-name>frozenColumns</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the columns of the table. If the CSS class names are comma-separated, each class will be assigned to a particular column in the order they follow in the attribute.If you have less class names than columns, the class will be applied to every n-fold column where n is the order in which the class is listed in the attribute. If there are more class names than columns, the overflow ones are ignored.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" a menu for controlling column visibility will be added to the table.
 Requires the table to have a header. The column names can be customized with name attribute on rich:column.
 Default value - "false".
</description>
            <property-name>showColumnControl</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the EDT has been initialized, either after a page load, and an ajax update.
</description>
            <property-name>onready</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">ready</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractExtendedDataTable</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>extendedDataTable</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.ExtendedDataTableHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Data</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ExtendedDataTableRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
     The &amp;lt;rich:dragSource&amp;gt; component can be added to a component to indicate it is capable of being dragged by the user.
     The dragged item can then be dropped into a compatible drop area, designated using the &amp;lt;rich:dropTarget&amp;gt; component.
 &lt;/p&gt;
 @author abelevich
</description>
        <component-type>org.richfaces.DragSource</component-type>
        <component-class>org.richfaces.component.UIDragSource</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Data to be sent to a drop zone after a drop event
</description>
            <property-name>dragValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A set of options for jQuery.draggable widget
</description>
            <property-name>dragOptions</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Component ID of a dragIndicator component that is used as drag pointer during the drag operation
</description>
            <property-name>dragIndicator</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A drag zone type that is used for zone definition, which elements can be accepted by a drop zone
</description>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDragSource</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dragSource</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DragSource</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DragSourceRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:pickList&amp;gt; is a component for selecting items from a list. Additionally, it allows for the selected
 items to be ordered (client-side). From the client side perspective, items are added/removed from the source list,
 and removed/added to the target list. &lt;/p&gt;

 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.PickList</component-type>
        <component-class>org.richfaces.component.UIPickList</component-class>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The height of the list element (in pixels)</description>
            <property-name>listHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the selected list item. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>selectItemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Expose the value from the value attribute under this request scoped key so that it may be referred to in EL for the value of other attributes.</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when the list element loses focus and its value has been modified since gaining focus.</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The maximum height of the item list (in pixels).</description>
            <property-name>maxListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the header element. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list element when it is disabled. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the columns of the list elements. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The width of the list element (in pixels)</description>
            <property-name>listWidth</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The minimum height of the item list (in pixels).</description>
            <property-name>minListHeight</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the list items. This value must be passed through as the "class" attribute on generated markup.</description>
            <property-name>itemClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Optional attribute that is a literal string that is the fully qualified class name of a concrete class that implements java.util.List, or an EL expression that evaluates to either 1. such a String, or 2. the Class object itself.</description>
            <property-name>collectionType</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-down button
</description>
            <property-name>downText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2193 Down"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the target list element receives focus.
</description>
            <property-name>ontargetfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">targetfocus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the source list element .
</description>
            <property-name>onsourcedblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the source list element receives focus.
</description>
            <property-name>onsourcefocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">sourcefocus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the add button
</description>
            <property-name>addText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2192 Add"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the target list element .
</description>
            <property-name>ontargetkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the target list element .
</description>
            <property-name>ontargetkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the remove-all button
</description>
            <property-name>removeAllText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D0 Remove all"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the remove button
</description>
            <property-name>removeText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2190 Remove"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-to-bottom button
</description>
            <property-name>downBottomText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D3 Last"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;if "true", then clicking an item moves it from one list to another&lt;/p&gt;
 &lt;p&gt;Default is "false"&lt;/p&gt;
</description>
            <property-name>switchByClick</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the source list element .
</description>
            <property-name>onsourcemousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when items are removed from the source list, and added to the target list
</description>
            <property-name>onadditems</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">additems</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the source list element .
</description>
            <property-name>onsourcemouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed and released over the source list element .
</description>
            <property-name>onsourcekeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when items are removed from the target list, and added to the source list
</description>
            <property-name>onremoveitems</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">removeitems</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the target list element .
</description>
            <property-name>ontargetkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the target list element .
</description>
            <property-name>ontargetmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-to-top button
</description>
            <property-name>upTopText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D1 First"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the target list element .
</description>
            <property-name>ontargetdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;if "true", then double-clicking an item moves it from one list to another&lt;/p&gt;
 &lt;p&gt;Default is "true"&lt;/p&gt;
</description>
            <property-name>switchByDblClick</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the target list element .
</description>
            <property-name>ontargetmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the source list element loses focus.
</description>
            <property-name>onsourceblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">sourceblur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is released over the source list element .
</description>
            <property-name>onsourcemouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;If "true" the items in the source list will remain sorted when items are added back to it.&lt;/p&gt;
 &lt;p&gt;Default is "false"&lt;/p&gt;
</description>
            <property-name>keepSourceOrder</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is pressed down over the source list element .
</description>
            <property-name>onsourcekeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the source list element .
</description>
            <property-name>onsourceclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a key is released over the source list element .
</description>
            <property-name>onsourcekeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when the target list element loses focus.
</description>
            <property-name>ontargetblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">targetblur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;If "true", then the target list is orderable, and the ordering controls are displayed&lt;/p&gt;
 &lt;p&gt;Default is "false"&lt;/p&gt;
</description>
            <property-name>orderable</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the source list element .
</description>
            <property-name>onsourcemouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the source list element .
</description>
            <property-name>onsourcemousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the target list element .
</description>
            <property-name>ontargetclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the add-all button
</description>
            <property-name>addAllText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u21D2 Add all"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved onto the target list element .
</description>
            <property-name>ontargetmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text placed above the target list of items
</description>
            <property-name>targetCaption</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text placed above the source list of items
</description>
            <property-name>sourceCaption</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the target list element .
</description>
            <property-name>ontargetmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved away from the target list element .
</description>
            <property-name>ontargetmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">listmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text to display in the move-up button
</description>
            <property-name>upText</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"\u2191 Up"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPickList</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>pickList</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.SelectMany</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PickListRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;amp;lt;r:inputNumberSpinner&amp;amp;gt; component is a single-line input field with buttons to increase and decrease a numerical value.
 The value can be changed using the corresponding directional keys on a keyboard, or by typing into the field.
 &lt;/p&gt;
</description>
        <component-type>org.richfaces.InputNumberSpinner</component-type>
        <component-class>org.richfaces.component.html.HtmlInputNumberSpinner</component-class>
        <property>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <property-name>accesskey</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when text within this element is selected by the user.</description>
            <display-name>Text Select Script</display-name>
            <property-name>onselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">select</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus and its value has been modified since gaining focus.</description>
            <display-name>Input Change Script</display-name>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A localized user presentable name for this component.</description>
            <display-name>Label</display-name>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed down in the input field
</description>
            <property-name>oninputkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the 'Up' button is clicked
</description>
            <property-name>onupclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">upclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute to set an "end" value.
 &lt;br /&gt;
 Default value is "100"
</description>
            <property-name>maxValue</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"100"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If set to "false" this attribute makes the text field "read-only", so the value can be changed only from a handle. &amp;lt;br /&amp;gt;Default value is "true".
</description>
            <property-name>enableManualInput</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is released
</description>
            <property-name>oninputmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" after the current value reaches the border value it is reversed to another border value after next increasing/decreasing.
 In other case possibilities of next increasing (or decreasing) will be locked.
 &lt;br /&gt;
 Default value is " true ".
</description>
            <property-name>cycled</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the component input field is clicked
</description>
            <property-name>oninputclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Parameter that determines the step between nearest values while using controls.
 &lt;br ./&gt;
 Default value is "1"
</description>
            <property-name>step</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"1"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is pressed and released in the input field
</description>
            <property-name>oninputkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved within the input field
</description>
            <property-name>oninputmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the component input field is double-clicked
</description>
            <property-name>oninputdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a mouse button is pressed down in the input field
</description>
            <property-name>oninputmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the 'Down' button is clicked
</description>
            <property-name>ondownclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">downclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved away from the input field
</description>
            <property-name>oninputmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute to set the "start" value.
 &lt;br /&gt;
 Default value is "0"
</description>
            <property-name>minValue</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"0"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component input field
</description>
            <property-name>inputClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute specifies the initial length of input in characters.
 &lt;br /&gt;
 Default value is "10".
</description>
            <property-name>inputSize</property-name>
            <property-class>int</property-class>
            <default-value>10</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a key is released in the input field
</description>
            <property-name>oninputkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a pointer is moved onto the input field
</description>
            <property-name>oninputmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">inputmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractInputNumberSpinner</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>inputNumberSpinner</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Input</cdk:component-family>
            <cdk:renderer-type>org.richfaces.InputNumberSpinnerRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> The &amp;lt;rich:dropDownMenu&amp;gt; component is used for creating a drop-down, hierarchical menu. It can be used with the
 &amp;lt;rich:toolbar&amp;gt; component to create menus in an application's toolbar.
</description>
        <component-type>org.richfaces.DropDownMenu</component-type>
        <component-class>org.richfaces.component.UIDropDownMenu</component-class>
        <facet>
            <facet-name>label</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>labelDisabled</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the vertical offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Vertical Offset</display-name>
            <property-name>verticalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the corner attachment point with which the popup should be connected. Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Joint Point</display-name>
            <property-name>jointPoint</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the direction of the popup.  Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Direction</display-name>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the horizontal offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Horizontal Offset</display-name>
            <property-name>horizontalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text label for the menu item. Alternatively, use the label facet to define content for the label
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Delay (in ms) between losing focus and menu closing&lt;/p&gt;
 &lt;p&gt;Default value is "300"&lt;/p&gt;
</description>
            <property-name>hideDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Defines an event on the parent element to display the menu&lt;/p&gt;
 &lt;p&gt;Default value is 'contextmenu'&lt;/p&gt;
</description>
            <property-name>showEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Delay (in ms) between observing the showEvent and menu opening&lt;/p&gt;
 &lt;p&gt;Default value is "50"&lt;/p&gt;
</description>
            <property-name>showDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Sets the submission mode for all menu items of the menu except those where this attribute redefined.
 Possible value are 'ajax','client' and 'server'
 &lt;/p&gt;
 &lt;p&gt;Default value is 'server'&lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.Mode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a menu item is clicked
</description>
            <property-name>onitemclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a child menuGroup is expanded
</description>
            <property-name>ongroupshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">groupshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a child menuGroup is hidden
</description>
            <property-name>ongrouphide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">grouphide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets minimum width for all lists that will appear.
</description>
            <property-name>popupWidth</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDropDownMenu</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dropDownMenu</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DropDownMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DropDownMenuRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> The &amp;lt;rich:chartPoint&amp;gt; tag defines the value of point. It is supposed to be used
 inside the &amp;lt;r:series&amp;lt; tag.
 @author Lukas Macko
</description>
        <component-type>org.richfaces.ui.output.Point</component-type>
        <component-class>org.richfaces.ui.output.component.UIPoint</component-class>
        <property>
            <description> Minimum value shown on the axis.
</description>
            <property-name>min</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Maximum value of the axis
</description>
            <property-name>max</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Itâ€™s the fraction of margin that the scaling algorithm will add to avoid
 that the outermost points ends up on the grid border.
</description>
            <property-name>pad</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Format for axis ticks (Date series only)
</description>
            <property-name>format</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Text shown next to axis.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Value plotted on x-axis.
</description>
            <property-name>x</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Value plotted on y-axis.
</description>
            <property-name>y</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChartPoint</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chartPoint</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ui.output.ChartFamily</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:editor&amp;gt; component is used for creating a WYSIWYG editor on a page. &lt;/p&gt;

 @author &lt;a href="http://community.jboss.org/people/lfryc"&gt;Lukas Fryc&lt;/a&gt;
</description>
        <component-type>org.richfaces.Editor</component-type>
        <component-class>org.richfaces.component.UIEditor</component-class>
        <facet>
            <description>Detailed configuration of editor in JSON format</description>
            <facet-name>config</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the converter message,
            replacing any message
            that comes from the converter.
        </description>
            <display-name>Converter Message</display-name>
            <icon/>
            <property-name>converterMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that this component's value must be
            converted and validated immediately (that is, during
            Apply Request Values phase), rather than waiting
            until Process Validations phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that the user is required to provide a submitted
            value for this input component.
        </description>
            <display-name>Required Flag</display-name>
            <icon/>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validation message for
            the "required"
            facility, if the "required" facility is used.
        </description>
            <display-name>Required Message</display-name>
            <icon/>
            <property-name>requiredMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing a validator method that will be called
            during Process Validations to perform
            correctness checks on the
            value of this component. The expression must evaluate to a public
            method that takes
            FacesContext, UIComponent, and Object parameters,
            with a return type of void.
        </description>
            <display-name>Validator</display-name>
            <icon/>
            <property-name>validator</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.context.FacesContext</cdk:param>
                    <cdk:param>javax.faces.component.UIComponent</cdk:param>
                    <cdk:param>java.lang.Object</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            A ValueExpression enabled attribute that, if present, will be
            used as the text of the validator message,
            replacing any
            message that comes from the validator.
        </description>
            <display-name>Validator Message</display-name>
            <icon/>
            <property-name>validatorMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing a value change listener method
            that will be notified when a new value
            has been set for this
            input component. The expression must evaluate to a public
            method that takes a
            &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter,
            with a return type of void, &lt;span
            class="changed_added_2_0"&gt;or
            to a public method that takes no arguments with a return type
            of void. In the latter
            case, the method has no way of easily
            knowing what the new value is, but this can be useful in cases
            where a
            notification is needed that "this value
            changed".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <property-name>valueChangeListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ValueChangeEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called once the editor is initialized and ready to be handle user interaction
</description>
            <property-name>oninit</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">init</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called on blur event when editor content has been changed after previous focus
</description>
            <property-name>onchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">change</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Set the skin of the richfaces editor. The only skin available by default is "moono".&lt;/p&gt;
</description>
            <property-name>skin</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"moono"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called immediately after the editor content has been changed
</description>
            <property-name>ondirty</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dirty</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Used to change the configuration of the toolbar's button set. There are two configurations available:
 basic (default), full (enables all of the features).
 &lt;p&gt;
 It is also possible to define a custom toolbar using the CKEditor toolbar configuration in a config facet
 &lt;/p&gt;
 &lt;p&gt;
 Default is basic
 &lt;/p&gt;
</description>
            <property-name>toolbar</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"Basic"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Used to switch the editor into a read-only mode.
</description>
            <property-name>readonly</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The width of the editor
</description>
            <property-name>width</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"100%"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The hieght of the editor
</description>
            <property-name>height</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"200px"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Detailed configuration of editor in JSON format
</description>
            <property-name>config</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Code describing the language used in the generated markup for this component.
</description>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractEditor</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>editor</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Editor</cdk:component-family>
            <cdk:renderer-type>org.richfaces.EditorRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
     The &amp;lt;rich:contextMenu&amp;gt; component is used for creating a hierarchical context menu that are activated on
     events like onmouseover, onclick etc. The component can be applied to any element on the page.
 &lt;/p&gt;
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.ContextMenu</component-type>
        <component-class>org.richfaces.component.UIContextMenu</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the vertical offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Vertical Offset</display-name>
            <property-name>verticalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Set the direction of the popup.  Possible values are:&lt;br /&gt;auto, topLeft, topRight, bottomLeft, bottomRight, autoLeft, autoRight, topAuto, bottomAuto&lt;/p&gt;&lt;p&gt;Default value is auto&lt;/p&gt;</description>
            <display-name>Direction</display-name>
            <property-name>direction</property-name>
            <property-class>org.richfaces.component.Positioning</property-class>
            <default-value>Positioning.auto</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>&lt;p&gt;Sets the horizontal offset between popup element and the conjunction point&lt;/p&gt;&lt;p&gt;Default value is 0&lt;/p&gt;</description>
            <display-name>Horizontal Offset</display-name>
            <property-name>horizontalOffset</property-name>
            <property-class>int</property-class>
            <default-value>0</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Client identifier of the component or id of the existing DOM element that is a source for a given event.
 If target is defined, the event is attached on the client. If both attached and target attributes are
 defined, and attribute attached has value 'false', it is considered to have higher priority.
</description>
            <property-name>target</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The jQuery selector used to filter which child DOM elements of the target/parent to which the contextMenu will
 be attached.
</description>
            <property-name>targetSelector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup is shown.</description>
            <display-name>On Show Script</display-name>
            <property-name>onshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">show</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true" the menu will stay visible when the mouse is moved away from it. Default value: "false".
</description>
            <property-name>sticky</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Delay (in ms) between losing focus and menu closing&lt;/p&gt;
 &lt;p&gt;Default value is "300"&lt;/p&gt;
</description>
            <property-name>hideDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If the value of the 'attached' attribute is true, the component is attached to the component, specified in the
 'target' attribute or to the parent component, if 'target' is not defined. Default value is 'true'.
</description>
            <property-name>attached</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Defines an event on the parent element to display the menu&lt;/p&gt;
 &lt;p&gt;Default value is 'contextmenu'&lt;/p&gt;
</description>
            <property-name>showEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side code executed after the popup disappears.</description>
            <display-name>On Hide Script</display-name>
            <property-name>onhide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">hide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Delay (in ms) between observing the showEvent and menu opening&lt;/p&gt;
 &lt;p&gt;Default value is "50"&lt;/p&gt;
</description>
            <property-name>showDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Sets the submission mode for all menu items of the menu except those where this attribute redefined.
 Possible value are 'ajax','client' and 'server'
 &lt;/p&gt;
 &lt;p&gt;Default value is 'server'&lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.Mode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a menu item is clicked
</description>
            <property-name>onitemclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a child menuGroup is expanded
</description>
            <property-name>ongroupshow</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">groupshow</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a child menuGroup is hidden
</description>
            <property-name>ongrouphide</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">grouphide</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets minimum width for all lists that will appear.
</description>
            <property-name>popupWidth</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractContextMenu</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>contextMenu</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ContextMenu</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ContextMenuRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:panelMenuGroup&amp;gt; component defines a group of &amp;lt;rich:panelMenuItem&amp;gt; components inside a
 &amp;lt;rich:panelMenu&amp;gt;.
 &lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.PanelMenuGroup</component-type>
        <component-class>org.richfaces.component.UIPanelMenuGroup</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mouse event used for expansion.
</description>
            <property-name>expandEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu group label when the group is disabled
</description>
            <property-name>rightDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the menu group is selected
</description>
            <property-name>onbeforeselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeselect</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the menu group is switched (toggled)
</description>
            <property-name>onbeforeswitch</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeswitch</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu group label when the group is disabled
</description>
            <property-name>leftDisabledIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the menu group label when the group is collapsed
</description>
            <property-name>rightCollapsedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A localized user presentable name for this component.
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the right icon of the panel menu group.
</description>
            <property-name>rightIconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu group label when the group is collapsed
</description>
            <property-name>leftCollapsedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the left icon of the panel menu group.
</description>
            <property-name>leftIconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel menu group when it is disabled.
</description>
            <property-name>disabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of this component
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the menu group is expanded
</description>
            <property-name>onexpand</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">expand</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu group label when the group is expanded
</description>
            <property-name>rightExpandedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whenever the group is selectable. Default: false.
</description>
            <property-name>selectable</property-name>
            <property-class>java.lang.Boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The mouse event used for collapsing.
</description>
            <property-name>collapseEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Mode used for expanding/collapsing of this group: default value is inherited from panelMenu
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.PanelMenuMode</property-class>
            <default-value>getPanelMenu().getGroupMode()</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the menu group is expanded
</description>
            <property-name>onbeforeexpand</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeexpand</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the menu group label when the group is expanded
</description>
            <property-name>leftExpandedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the menu group is collapsed
</description>
            <property-name>onbeforecollapse</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforecollapse</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines whenever this group is expanded
</description>
            <property-name>expanded</property-name>
            <property-class>java.lang.Boolean</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the menu group is selected
</description>
            <property-name>onselect</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">select</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the menu group is collapsed
</description>
            <property-name>oncollapse</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">collapse</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the menu group is switched (toggled)
</description>
            <property-name>onswitch</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">switch</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPanelMenuGroup</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>panelMenuGroup</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.PanelMenuGroup</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:togglePanel&amp;gt; component is used as a base for the other switchable components, the
 &amp;lt;rich:accordion&amp;gt; component and the &amp;lt;rich:tabPanel&amp;gt; component. It provides an abstract switchable
 component without any associated markup. As such, the &amp;lt;rich:togglePanel&amp;gt; component could be customized to
 provide a switchable component when neither an accordion component or a tab panel component is appropriate.&lt;/p&gt;

 @author akolonitsky
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.TogglePanel</component-type>
        <component-class>org.richfaces.component.UITogglePanel</component-class>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the item is changed.
</description>
            <property-name>onbeforeitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeitemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Occurs on the server side when an item is changed through Ajax using the server mode
</description>
            <property-name>itemChangeListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request
 Values phase), rather than waiting until Process Validations phase.
</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Holds the active panel name. This name is a reference to the name identifier of the active child
 &amp;lt;rich:togglePanelItem&amp;gt; component.
</description>
            <property-name>activeItem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch mode when a panel is activated. One of: "client", "server", "ajax". Default: "ajax"
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the item is changed.
</description>
            <property-name>onitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Applicable when cycling through the tabs. If "true", then when the last tab is active, cycling to next will activate the
 first tab, if "false", cycling to next will have not effect. The inverse applies for the first tab, and cycling to
 previous. Whether to Default: false
</description>
            <property-name>cycledSwitching</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTogglePanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>togglePanel</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TogglePanel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TogglePanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:tabPanel&amp;gt; component provides a set of tabbed panels for displaying one panel of content at a time.
 The tabs can be highly customized and themed. Each tab within a &amp;lt;rich:tabPanel&amp;gt; container is a &amp;lt;rich:tab&amp;gt;
 component.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.TabPanel</component-type>
        <component-class>org.richfaces.component.UITabPanel</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the item is changed.
</description>
            <property-name>onbeforeitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeitemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) for inactive tab headers.
</description>
            <property-name>tabInactiveHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Occurs on the server side when an item is changed through Ajax using the server mode
</description>
            <property-name>itemChangeListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request
 Values phase), rather than waiting until Process Validations phase.
</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Holds the active tab name. This name is a reference to the name identifier of the active child &amp;lt;rich:tab&amp;gt;
 component.
</description>
            <property-name>activeItem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) for active tab header.
</description>
            <property-name>tabActiveHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) for disabled tab headers.
</description>
            <property-name>tabDisabledHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The alignment of the tab panel header: left (default), right
</description>
            <property-name>headerAlignment</property-name>
            <property-class>org.richfaces.HeaderAlignment</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch mode when a panel is activated. One of: "client", "server", "ajax". Default: "ajax"
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the item is changed.
</description>
            <property-name>onitemchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">itemchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) for tab headers.
</description>
            <property-name>tabHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The position of the header: top (default), bottom
</description>
            <property-name>headerPosition</property-name>
            <property-class>org.richfaces.HeaderPosition</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Applicable when cycling through the tabs. If "true", then when the last tab is active, cycling to next will activate the
 first tab, if "false", cycling to next will have not effect. The inverse applies for the first tab, and cycling to
 previous. Whether to Default: false
</description>
            <property-name>cycledSwitching</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) for tab content
</description>
            <property-name>tabContentClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTabPanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>tabPanel</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.TabPanel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TabPanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;rich:dataTable&amp;gt; component is used to render a table, including the table's caption. It works in conjunction with
 the &amp;lt;rich:column&amp;gt; and &amp;lt;rich:columnGroup&amp;gt; components to list the contents of a data model.
 &lt;/p&gt;

 @author Anton Belevich
</description>
        <component-type>org.richfaces.DataTable</component-type>
        <component-class>org.richfaces.component.UIDataTable</component-class>
        <facet>
            <description> The footer of the table
</description>
            <facet-name>footer</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The header of the table
</description>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <facet-name>caption</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <facet>
            <description> The content to be displayed when table contains no rows (no data provided).
</description>
            <facet-name>noData</facet-name>
            <facet-extension>
                <cdk:generate>true</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description>Javascript code executed when a pointer button is moved away from table row.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onrowmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over table row.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onrowkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over table row.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onrowmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto table row.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onrowmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over table row.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onrowclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over table row.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onrowkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within table row.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onrowmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over table row.</description>
            <display-name>Double Click Script</display-name>
            <property-name>onrowdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over table row.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onrowmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowmouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over table row.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onrowkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">rowkeypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The number of rows to display, or zero for all remaining rows in the table</description>
            <property-name>rows</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the header of the table</description>
            <display-name>Header first row CSS Classes</display-name>
            <property-name>headerFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the header of the table</description>
            <display-name>Header cell CSS Classes</display-name>
            <property-name>headerCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the subfooter of the table</description>
            <display-name>Subfooter cell CSS Classes</display-name>
            <property-name>columnFooterCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the footer of the table</description>
            <display-name>Footer first row CSS Classes</display-name>
            <property-name>footerFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the rows of the subfooter of the table</description>
            <display-name>Subfooter CSS Classes</display-name>
            <property-name>columnFooterClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the subheader of the table</description>
            <display-name>Subfooter first row CSS Classes</display-name>
            <property-name>firstColumnFooterClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the rows of the subheader of the table</description>
            <display-name>Subheader CSS Classes</display-name>
            <property-name>columnHeaderClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the footer of the table</description>
            <display-name>Footer cell CSS Classes</display-name>
            <property-name>footerCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the table</description>
            <display-name>Cell CSS Classes</display-name>
            <property-name>cellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the cells of the subheader of the table</description>
            <display-name>Subheader cell CSS Classes</display-name>
            <property-name>columnHeaderCellClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the table</description>
            <display-name>First row CSS Classes</display-name>
            <property-name>firstRowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to the first row of the subheader of the table</description>
            <display-name>Subheader first row CSS Classes</display-name>
            <property-name>columnHeaderFirstClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies when table will be sorted according to one column (single) or multiple columns (multi). Default value - "multi"
</description>
            <property-name>sortMode</property-name>
            <property-class>org.richfaces.model.SortMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any header generated for this column.</description>
            <display-name>Header CSS Classes</display-name>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the table cells
</description>
            <property-name>rowClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) that will be applied to any footer generated for this column.</description>
            <display-name>Footer CSS Classes</display-name>
            <property-name>footerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Comma-separated list of column names determining priority of row sorting.
</description>
            <property-name>sortPriority</property-name>
            <property-class>java.util.Collection</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component caption
</description>
            <property-name>captionClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The label to be displayed when table contains no rows (no data provided).
</description>
            <property-name>noDataLabel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of the variable used in EL expression provided in filterExpression in order to decide about displaying particular
 row.
</description>
            <property-name>filterVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the rows of the table. If the CSS class names are comma-separated, each class will be assigned to a particular row in the order they follow in the attribute.If you have less class names than rows, the class will be applied to every n-fold row where n is the order in which the class is listed in the attribute. If there are more class names than rows, the overflow ones are ignored.</description>
            <property-name>rowClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Assigns one or more space-separated CSS class names to the columns of the table. If the CSS class names are comma-separated, each class will be assigned to a particular column in the order they follow in the attribute.If you have less class names than columns, the class will be applied to every n-fold column where n is the order in which the class is listed in the attribute. If there are more class names than columns, the overflow ones are ignored.</description>
            <property-name>columnClasses</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDataTable</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dataTable</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.DataTableHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Data</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DataTableRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description>
 @author Lukas Macko
</description>
        <component-type>org.richfaces.ui.output.Legend</component-type>
        <component-class>org.richfaces.ui.output.component.UILegend</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute defines the order of series labels in legend. If not
 specified the order labels is the same as the order of series in facelet.
 Allowed values:
 &lt;ul&gt;
 &lt;li&gt;ascending&lt;/li&gt;
 &lt;li&gt;descending&lt;/li&gt;
 &lt;/ul&gt;
</description>
            <property-name>sorting</property-name>
            <property-class>org.richfaces.component.AbstractChartLegend.SortingType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Chart legend position allowed values:
 &lt;ul&gt;
 &lt;li&gt;nw - top left&lt;/li&gt;
 &lt;li&gt;sw - bottom left&lt;/li&gt;
 &lt;li&gt;ne - top right (default)&lt;/li&gt;
 &lt;li&gt;se - bottom right&lt;/li&gt;
 &lt;/ul&gt;
</description>
            <property-name>position</property-name>
            <property-class>org.richfaces.component.AbstractChartLegend.PositionType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractChartLegend</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>chartLegend</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ui.output.ChartFamily</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:notifyMessage&amp;gt; component is built on top of &amp;lt;rich:notify&amp;gt;, the difference is in usage. The
 &amp;lt;rich:notifyMessage&amp;gt; component displays FacesMessages associated with a given component, similar to
 &amp;lt;rich:message&amp;gt;: one notification is displayed for first FacesMessage in the stack that is risen either
 programatically or during conversion/validation of the component. The severity of the message determines the color
 and icon of the resulting notification.&lt;/p&gt;

 @author &lt;a href="http://community.jboss.org/people/lfryc"&gt;Lukas Fryc&lt;/a&gt;
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
        <component-type>org.richfaces.NotifyMessage</component-type>
        <component-class>org.richfaces.component.html.HtmlNotifyMessage</component-class>
        <property>
            <description>Defines whether the shadow under notification should be displayed</description>
            <property-name>showShadow</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines opacity of non-blocking notifications</description>
            <property-name>nonblockingOpacity</property-name>
            <property-class>java.lang.Double</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines how long will notification stay displayed after appearing</description>
            <property-name>stayTime</property-name>
            <property-class>java.lang.Integer</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the notification should fade when hovering and allow to click elements behind</description>
            <property-name>nonblocking</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines whether the close button should be displayed</description>
            <property-name>showCloseButton</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, notifications have to be closed with the close button (overrides @showCloseButton)</description>
            <property-name>sticky</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines which stack will be notification bound to</description>
            <property-name>stack</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Defines, whether the content of this component must be (or not) included in AJAX response created by parent AJAX Container, even if it is not forced by reRender list of ajax action. Ignored if component marked to output by some Ajax action component. Default value - "true"</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that characters that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
            <display-name>Escape Characters Flag</display-name>
            <property-name>escape</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Client identifier of the component for which to display messages.
        </description>
            <display-name>Associated Client Id</display-name>
            <icon/>
            <property-name>for</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the detail portion of displayed messages
            should be included. Default value is
            "true".
        </description>
            <display-name>Show Detail</display-name>
            <icon/>
            <property-name>showDetail</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether the summary portion of displayed messages
            should be included. Default value is
            "false".
        </description>
            <display-name>Show Summary</display-name>
            <icon/>
            <property-name>showSummary</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractNotifyMessage</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>notifyMessage</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Message</cdk:component-family>
            <cdk:renderer-type>org.richfaces.NotifyMessageRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
     The &amp;lt;rich:dragIndicator&amp;gt; component defines a graphical element to display under the mouse cursor during a
     drag-and-drop operation.
 &lt;/p&gt;
 @author abelevich
</description>
        <component-type>org.richfaces.DragIndicator</component-type>
        <component-class>org.richfaces.component.UIDragIndicator</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the indicator which are applied when a drop is rejected
</description>
            <property-name>rejectClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the indicator which are applied when a drop is accepted
</description>
            <property-name>acceptClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Assigns one or more space-separated CSS class names to the component. Corresponds to the HTML "class" attribute.
</description>
            <property-name>draggingClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractDragIndicator</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>dragIndicator</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.DragIndicator</cdk:component-family>
            <cdk:renderer-type>org.richfaces.DragIndicatorRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:tab&amp;gt; component represents an individual tab inside a &amp;lt;rich:tabPanel&amp;gt; component, including
 the tab's content. Clicking on the tab header will bring its corresponding content to the front of other tabs.&lt;/p&gt;

 @author akolonitsky
</description>
        <component-type>org.richfaces.Tab</component-type>
        <component-class>org.richfaces.component.UITab</component-class>
        <facet>
            <facet-name>header</facet-name>
            <facet-extension>
                <cdk:generate>false</cdk:generate>
            </facet-extension>
        </facet>
        <property>
            <description> Javascript code executed when a pointer button is released over the header of this element.
</description>
            <property-name>onheadermouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is moved within the header of this element.
</description>
            <property-name>onheadermousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header
</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is pressed down over the header of this element.
</description>
            <property-name>onheadermousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headermousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is double clicked over the header of this element.
</description>
            <property-name>onheaderdblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headerdblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Javascript code executed when a pointer button is clicked over the header of this element.
</description>
            <property-name>onheaderclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">headerclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is disabled
</description>
            <property-name>headerDisabledClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the panel content
</description>
            <property-name>contentClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS style applied to the header
</description>
            <property-name>headerStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse enters the panel
</description>
            <property-name>onenter</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">enter</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is inactive
</description>
            <property-name>headerInactiveClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The CSS class applied to the header when this panel is active
</description>
            <property-name>headerActiveClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function to perform when the mouse leaves the panel.
</description>
            <property-name>onleave</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">leave</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The header label of the tab
</description>
            <property-name>header</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the tab, used for identifying and manipulating the active panel
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch type for this toggle panel: client, ajax (default), server
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTab</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>tab</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Tab</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TabRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
     The &amp;lt;rich:collapsiblePanel&amp;gt; component is a collapsible panel that shows or hides content when the header bar is activated.
     It is a simplified version of &amp;lt;rich:togglePanel&amp;gt; component.
 &lt;/p&gt;
 @author akolonitsky
</description>
        <component-type>org.richfaces.CollapsiblePanel</component-type>
        <component-class>org.richfaces.component.UICollapsiblePanel</component-class>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the panel state is switched
</description>
            <property-name>onbeforeswitch</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeswitch</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is collapsed
</description>
            <property-name>rightCollapsedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel header. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>headerClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is collapsed
</description>
            <property-name>leftCollapsedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request
 Values phase), rather than waiting until Process Validations phase.
</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Provides the text on the panel header. The panel header is all that is visible when the panel is collapsed.
 &lt;/p&gt;
 &lt;p&gt;
 Alternatively the header facet could be used in place of the header attribute.
 This would allow for additional styles and custom content to be applied to the tab.
 &lt;/p&gt;
</description>
            <property-name>header</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> A Server-side MethodExpression to be called when the panel is toggled
</description>
            <property-name>toggleListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The switch mode when a panel is activated. One of: "client", "server", "ajax". Default: "ajax"
</description>
            <property-name>switchType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the right of the panel header when the panel is expanded
</description>
            <property-name>rightExpandedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The icon displayed on the left of the panel header when the panel is expanded
</description>
            <property-name>leftExpandedIcon</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> When true, the panel is expanded, when false, the panel is collapsed
</description>
            <property-name>expanded</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the panel content. This value must be
 passed through as the "class" attribute on generated markup.
</description>
            <property-name>bodyClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the panel state is switched
</description>
            <property-name>onswitch</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">switch</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCollapsiblePanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>collapsiblePanel</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.CollapsiblePanelTagHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.CollapsiblePanel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CollapsiblePanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;The &amp;lt;rich:tree&amp;gt; component provides a hierarchical tree control. Each &amp;lt;rich:tree&amp;gt; component typically
 consists of &amp;lt;rich:treeNode&amp;gt; child components. The appearance and behavior of the tree and its nodes can be
 fully customized.&lt;/p&gt;

 @author Nick Belaevski
</description>
        <component-type>org.richfaces.Tree</component-type>
        <component-class>org.richfaces.component.UITree</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "execute" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of IDs, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords&lt;br/&gt;Default value is "@region" which resolves to this component if no region is present.</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>IDs of components that will participate in the "render" portion of the Request Processing Lifecycle. Can be a single ID, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection. Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list. Some components make use of additional keywords</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until the Invoke Application phase.</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree nodes.</description>
            <property-name>nodeClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the state in a Request scope.</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope.</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By default state is reset if there are no faces messages with severity error or higher.</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Client-side event used for toggling tree nodes (click, dblclick, etc.)</description>
            <property-name>toggleNodeEvent</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating.</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Determines which treeNode should be used for rendering. Should contain EL expressions which uses request-scoped variable with name defied in attribute 'var'. If not set a default treeNode will be created.</description>
            <property-name>nodeType</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before the selection is changed.</description>
            <property-name>onbeforeselectionchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforeselectionchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the selection is changed.</description>
            <property-name>onselectionchange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">selectionchange</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The type of type of the selection - ajax (default), client, server.</description>
            <property-name>selectionType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>When "true" a default treeNode will be created for nodes in the dataModel that do not match any existing treeNode. Default value - "false".</description>
            <property-name>useDefaultNode</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The collections of selected nodes.</description>
            <property-name>selection</property-name>
            <property-class>java.util.Collection</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Method expression referencing a method that will be called when an TreeSelectionChangeEvent has been broadcast for the listener.</description>
            <property-name>selectionChangeListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the node is toggled.</description>
            <property-name>onnodetoggle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">nodetoggle</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before the node is toggled.</description>
            <property-name>onbeforenodetoggle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforenodetoggle</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The type of type of the node toggling - ajax (default), client, server.</description>
            <property-name>toggleType</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for collapsed node.</description>
            <property-name>iconCollapsed</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for expanded node.</description>
            <property-name>iconExpanded</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node labels.</description>
            <property-name>labelClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The icon for component leaves.</description>
            <property-name>iconLeaf</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>MethodExpression representing an tree node toggle listener method that will be notified when the tree node is toggled. The expression must evaluate to a public method that takes an TreeToggleEvent parameter, with a return type of void, or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".</description>
            <property-name>toggleListener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node handles.</description>
            <property-name>handleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied to the tree node icons.</description>
            <property-name>iconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Points to the data model
</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractTree</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>tree</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Tree</cdk:component-family>
            <cdk:renderer-type>org.richfaces.TreeRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt; The &amp;lt;rich:progressBar&amp;gt; component displays a progress bar to indicate the status of a process to the user.
 It can update either through Ajax or on the client side, and the look and feel can be fully customized. &lt;/p&gt;

 @author "Andrey Markavtsov"
</description>
        <component-type>org.richfaces.ProgressBar</component-type>
        <component-class>org.richfaces.component.UIProgressBar</component-class>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Max value, after which complete state should be rendered.&lt;/p&gt;
 &lt;p&gt;Default value is "100".&lt;/p&gt;
</description>
            <property-name>maxValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when progress is finished
</description>
            <property-name>onfinish</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">finish</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines a simple label instead of rendering children component
</description>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when before progress finishes.
 This value must be passed through as the "class" attribute on generated markup.
</description>
            <property-name>finishClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Interval (in ms) for call poll requests.&lt;/p&gt;
 &lt;p&gt;Default value 1000 ms (1 sec)&lt;/p&gt;
</description>
            <property-name>interval</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the progress bar element.
 This value must be passed through as the "class" attribute on generated markup.
</description>
            <property-name>progressClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Enables/disables polling.&lt;/p&gt;
 &lt;p&gt;Default value is "true".&lt;/p&gt;
</description>
            <property-name>enabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;The mode for updating the progress bar, can be one of:&lt;/p&gt;
 &lt;dl&gt;
     &lt;dt&gt;ajax&lt;/dt&gt;
     &lt;dd&gt;The progress bar updates in the same way as the &amp;lt;a4j:poll&amp;gt; component. The &amp;lt;rich:progressBar&amp;gt; component repeatedly polls the server for the current progress value.&lt;/dd&gt;
     &lt;dt&gt;client&lt;/dt&gt;
     &lt;dd&gt;The progress bar must be explicitly updated on the client side through the JavaScript API.&lt;/dd&gt;
 &lt;/dl&gt;
 &lt;p&gt;Default is "ajax"&lt;/p&gt;
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.SwitchType</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;Min value when initial state should be rendered.&lt;/p&gt;
 &lt;p&gt;Default value is "0".&lt;/p&gt;
</description>
            <property-name>minValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied to the remaining part of the progress bar.
 This value must be passed through as the "class" attribute on generated markup.
</description>
            <property-name>remainingClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Space-separated list of CSS style class(es) to be applied when before progress starts.
 This value must be passed through as the "class" attribute on generated markup.
</description>
            <property-name>initialClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets the current value of the progress
</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractProgressBar</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>progressBar</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.ProgressBar</cdk:component-family>
            <cdk:renderer-type>org.richfaces.ProgressBarRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <render-kit>
        <render-kit-id>HTML_BASIC</render-kit-id>
        <renderer>
            <description> @author Anton Belevich

</description>
            <component-family>org.richfaces.Data</component-family>
            <renderer-type>org.richfaces.CollapsibleSubTableRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.CollapsibleSubTableRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author abelevich

</description>
            <component-family>org.richfaces.DropTarget</component-family>
            <renderer-type>org.richfaces.DropTargetRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.DropTargetRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since 2010-10-25
</description>
            <component-family>org.richfaces.PanelMenu</component-family>
            <renderer-type>org.richfaces.PanelMenuRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PanelMenuRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Anton Belevich

</description>
            <component-family>org.richfaces.ColumnGroup</component-family>
            <renderer-type>org.richfaces.ColumnGroupRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.ColumnGroupRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since -4712-01-01
</description>
            <component-family>org.richfaces.TogglePanelItem</component-family>
            <renderer-type>org.richfaces.TogglePanelItemRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TogglePanelItemRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author abelevich

</description>
            <component-family>org.richfaces.DragSource</component-family>
            <renderer-type>org.richfaces.DragSourceRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.DragSourceRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Toolbar</component-family>
            <renderer-type>org.richfaces.ToolbarGroupRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.ToolbarGroupRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Anton Belevich
</description>
            <component-family>org.richfaces.Data</component-family>
            <renderer-type>org.richfaces.DataTableRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.DataTableRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since 2010-08-24
</description>
            <component-family>org.richfaces.Tab</component-family>
            <renderer-type>org.richfaces.TabRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TabRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Anton Belevich

</description>
            <component-family>org.richfaces.Data</component-family>
            <renderer-type>org.richfaces.DataGridRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.DataGridRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
            <component-family>org.richfaces.TabPanel</component-family>
            <renderer-type>org.richfaces.TabPanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TabPanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since 2010-10-25
</description>
            <component-family>org.richfaces.PanelMenuGroup</component-family>
            <renderer-type>org.richfaces.PanelMenuGroupRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PanelMenuGroupRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
</description>
            <component-family>org.richfaces.Accordion</component-family>
            <renderer-type>org.richfaces.AccordionRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AccordionRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Anton Belevich
</description>
            <component-family>org.richfaces.CollapsibleSubTableToggler</component-family>
            <renderer-type>org.richfaces.CollapsibleSubTableTogglerRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.CollapsibleSubTableTogglerRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author amarkhel
 @since 2010-10-24
</description>
            <component-family>org.richfaces.Tooltip</component-family>
            <renderer-type>org.richfaces.TooltipRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TooltipRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Konstantin Mishin

</description>
            <component-family>org.richfaces.Data</component-family>
            <renderer-type>org.richfaces.ExtendedDataTableRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.ExtendedDataTableRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description>
 @author akolonitsky
 @since 2010-08-05
</description>
            <component-family>org.richfaces.AccordionItem</component-family>
            <renderer-type>org.richfaces.AccordionItemRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AccordionItemRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since 2010-10-25
</description>
            <component-family>org.richfaces.PanelMenuItem</component-family>
            <renderer-type>org.richfaces.PanelMenuItemRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PanelMenuItemRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @since 2010-08-27
</description>
            <component-family>org.richfaces.CollapsiblePanel</component-family>
            <renderer-type>org.richfaces.CollapsiblePanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.CollapsiblePanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author akolonitsky
 @author &lt;a href="http://community.jboss.org/people/bleathem"&gt;Brian Leathem&lt;/a&gt;
</description>
            <component-family>org.richfaces.TogglePanel</component-family>
            <renderer-type>org.richfaces.TogglePanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TogglePanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DropDownMenu</component-family>
            <renderer-type>org.richfaces.MenuItemRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.MenuItemRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Placeholder</component-family>
            <renderer-type>org.richfaces.PlaceholderRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PlaceholderRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Notify</component-family>
            <renderer-type>org.richfaces.NotifyRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.NotifyRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Message</component-family>
            <renderer-type>org.richfaces.MessageRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.HtmlMessageRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>org.richfaces.InputNumberSpinnerRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.InputNumberSpinnerRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Select</component-family>
            <renderer-type>org.richfaces.InplaceSelectRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.InplaceSelectRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.HotKey</component-family>
            <renderer-type>org.richfaces.HotKeyRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.HotKeyRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Chart</component-family>
            <renderer-type>org.richfaces.ChartRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.ChartRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DropDownMenu</component-family>
            <renderer-type>org.richfaces.MenuGroupRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.MenuGroupRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DragIndicator</component-family>
            <renderer-type>org.richfaces.DragIndicatorRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.DragIndicatorRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.ProgressBar</component-family>
            <renderer-type>org.richfaces.ProgressBarRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.ProgressBarRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Panel</component-family>
            <renderer-type>org.richfaces.PanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Message</component-family>
            <renderer-type>org.richfaces.NotifyMessageRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.HtmlNotifyMessageRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.PopupPanel</component-family>
            <renderer-type>org.richfaces.PopupPanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PopupPanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.ContextMenu</component-family>
            <renderer-type>org.richfaces.ContextMenuRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.ContextMenuRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>org.richfaces.AutocompleteRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AutocompleteRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Calendar</component-family>
            <renderer-type>org.richfaces.CalendarRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.CalendarRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DataScroller</component-family>
            <renderer-type>org.richfaces.DataScrollerRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.DataScrollerRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Messages</component-family>
            <renderer-type>org.richfaces.MessagesRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.HtmlMessagesRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Focus</component-family>
            <renderer-type>org.richfaces.FocusRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.FocusRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.List</component-family>
            <renderer-type>org.richfaces.ListRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.ListRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.SelectMany</component-family>
            <renderer-type>org.richfaces.PickListRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PickListRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DropDownMenu</component-family>
            <renderer-type>org.richfaces.DropDownMenuRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.DropDownMenuRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Editor</component-family>
            <renderer-type>org.richfaces.EditorRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.EditorRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Tree</component-family>
            <renderer-type>org.richfaces.TreeRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TreeRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Messages</component-family>
            <renderer-type>org.richfaces.NotifyMessagesRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.HtmlNotifyMessagesRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.InplaceInput</component-family>
            <renderer-type>org.richfaces.InplaceInputRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.InplaceInputRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Toolbar</component-family>
            <renderer-type>org.richfaces.ToolbarRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.ToolbarRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Select</component-family>
            <renderer-type>org.richfaces.SelectRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.SelectRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>org.richfaces.InputNumberSliderRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.InputNumberSliderRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.DropDownMenu</component-family>
            <renderer-type>org.richfaces.MenuSeparatorRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.MenuSeparatorRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.NotifyStack</component-family>
            <renderer-type>org.richfaces.NotifyStackRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.NotifyStackRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.FileUpload</component-family>
            <renderer-type>org.richfaces.FileUploadRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.FileUploadRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.TreeNode</component-family>
            <renderer-type>org.richfaces.TreeNodeRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.TreeNodeRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.SelectMany</component-family>
            <renderer-type>org.richfaces.OrderingListRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.OrderingListRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.JQuery</component-family>
            <renderer-type>org.richfaces.JQueryRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.JQueryRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <client-behavior-renderer>
            <client-behavior-renderer-type>org.richfaces.component.behavior.ToggleControl</client-behavior-renderer-type>
            <client-behavior-renderer-class>org.richfaces.renderkit.html.ToggleControlRenderer</client-behavior-renderer-class>
        </client-behavior-renderer>
        <client-behavior-renderer>
            <client-behavior-renderer-type>org.richfaces.behavior.ComponentControlBehavior</client-behavior-renderer-type>
            <client-behavior-renderer-class>org.richfaces.renderkit.ComponentControlBehaviorRenderer</client-behavior-renderer-class>
        </client-behavior-renderer>
        <client-behavior-renderer>
            <client-behavior-renderer-type>org.richfaces.ClientValidatorRenderer</client-behavior-renderer-type>
            <client-behavior-renderer-class>org.richfaces.renderkit.html.ClientValidatorRenderer</client-behavior-renderer-class>
        </client-behavior-renderer>
        <client-behavior-renderer>
            <client-behavior-renderer-type>org.richfaces.FormValidatorRenderer</client-behavior-renderer-type>
            <client-behavior-renderer-class>org.richfaces.renderkit.html.FormClientValidatorRenderer</client-behavior-renderer-class>
        </client-behavior-renderer>
        <render-kit-extension/>
    </render-kit>
    <converter>
        <converter-id>org.richfaces.DeclarativeModelSequenceKeyConverter</converter-id>
        <converter-class>org.richfaces.convert.DeclarativeModelSequenceKeyConverter</converter-class>
        <converter-extension>
            <cdk:generate>false</cdk:generate>
        </converter-extension>
    </converter>
    <converter>
        <converter-id>org.richfaces.IntegerSequenceRowKeyConverter</converter-id>
        <converter-class>org.richfaces.convert.IntegerSequenceRowKeyConverter</converter-class>
        <converter-extension>
            <cdk:generate>false</cdk:generate>
        </converter-extension>
    </converter>
    <converter>
        <converter-id>org.richfaces.StringSequenceRowKeyConverter</converter-id>
        <converter-class>org.richfaces.convert.StringSequenceRowKeyConverter</converter-class>
        <converter-extension>
            <cdk:generate>false</cdk:generate>
        </converter-extension>
    </converter>
    <validator>
        <description> Implementation of the JSF validator to use with Bean Validation / Hibernate validator TODO - implement partial state saving.

 @author asmirnov

</description>
        <validator-id>org.richfaces.BeanValidator</validator-id>
        <validator-class>org.richfaces.validator.FacesBeanValidator</validator-class>
        <validator-extension>
            <cdk:base-class>org.richfaces.validator.FacesBeanValidator</cdk:base-class>
            <cdk:generate>false</cdk:generate>
        </validator-extension>
    </validator>
    <behavior>
        <description> &lt;p&gt; The &amp;lt;rich:toggleControl&amp;gt; behavior can be attached to any interface component, whether inside or outside the
 controlled panel itself. It works with a &amp;lt;rich:togglePanel&amp;gt; component to switch between different
 &amp;lt;rich:togglePanelItem&amp;gt; components. &lt;/p&gt;

 @author akolonitsky
</description>
        <behavior-id>org.richfaces.component.behavior.ToggleControl</behavior-id>
        <behavior-class>org.richfaces.component.behavior.ToggleControl</behavior-class>
        <property>
            <description> The &amp;lt;rich:togglePanel&amp;gt; to switch when this &amp;lt;rich:toggleControl&amp;gt; is not a child of a &amp;lt;rich:togglePanel&amp;gt;
</description>
            <property-name>targetPanel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true", disable the default action of the parent component
</description>
            <property-name>disableDefault</property-name>
            <property-class>java.lang.Boolean</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The next &amp;lt;rich:togglePanelItem&amp;gt; to switch to
</description>
            <property-name>targetItem</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The event on which to toggle the target panel
</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <behavior-extension>
            <cdk:base-class>org.richfaces.component.behavior.ToggleControl</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>toggleControl</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.CustomBehaviorHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
        </behavior-extension>
    </behavior>
    <behavior>
        <description> &lt;p&gt;
     The &amp;lt;rich:componentControl&amp;gt; behavior allows JavaScript API functions to be called on target components.
     The functions are called after defined events are triggered on the component to with the
     &amp;lt;rich:componentControl&amp;gt; behavior is attached. Initialization variants and activation events can be
     customized, and parameters can be passed to the target component.
 &lt;/p&gt;
 @author Anton Belevich
</description>
        <behavior-id>org.richfaces.behavior.ComponentControlBehavior</behavior-id>
        <behavior-class>org.richfaces.component.behavior.ComponentControlBehavior</behavior-class>
        <property>
            <description> Javascript invoked just before the operation will be invoked on target component.
</description>
            <property-name>onbeforeoperation</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> jQuery selector (CSS selector with jQuery extensions) which finds target component which will be the operation fired on.
</description>
            <property-name>selector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The function of JavaScript API that will be invoked on the target components (selected with target or selector
 attributes).
</description>
            <property-name>operation</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Comma-separated list of component IDs of components which will be the operation fired on. (Alternatively you can use
 selector attribute).
</description>
            <property-name>target</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of JavaScript event property (click, change, etc.) of parent component that triggers the behavior. If the event
 attribute is not defined, the behavior is triggered on the event that normally provides interaction behavior for the
 parent component
</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <behavior-extension>
            <cdk:base-class>org.richfaces.component.behavior.ComponentControlBehavior</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>componentControl</cdk:tag-name>
                <cdk:handler-class>org.richfaces.taglib.ComponentControlHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
        </behavior-extension>
    </behavior>
    <behavior>
        <description> &lt;p&gt;The &amp;lt;rich:validator&amp;gt; behavior adds client-side validation to a form input control based on registered server-side validators. It provides this validation without the need to reproduce the server-side annotations.&lt;/p&gt;

 &lt;p&gt;The &amp;lt;rich:validator&amp;gt; behavior triggers all client validator annotations listed in the relevant managed bean.&lt;/p&gt;

 @author asmirnov@exadel.com
</description>
        <behavior-id>org.richfaces.behavior.ClientValidator</behavior-id>
        <behavior-class>org.richfaces.component.behavior.ClientValidatorImpl</behavior-class>
        <property>
            <description>
            Serialized (on default with JSON) data passed to the client by a developer on an AJAX request.
            It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and
            collections can be serialized and used with data
        </description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", do not initiate client-side validation</description>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The client-side script method to be called after the ajax response comes back, but before the DOM is updated
        </description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The client-side script method to be called before the AJAX request is submitted
        </description>
            <property-name>onbeforesubmit</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The client-side script method to be called before an ajax request.
        </description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The client-side script method to be called after the DOM is updated
        </description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The client-side script method to be called when an error has occurred during Ajax communications
        </description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
             Identify the name of the destination queue
        </description>
            <property-name>queueId</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Name of the request status component that will indicate the status of the Ajax request
        </description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until the Process Validations phase.</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when the validation succeeds.</description>
            <property-name>onvalid</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when the validation fails.</description>
            <property-name>oninvalid</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Method expression referencing a method that will be called when an AjaxBehaviorEvent has been broadcast for the listener.</description>
            <property-name>listener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of JavaScript event property (click, change, etc.) of parent component that triggers the behavior. If the event attribute is not defined, the behavior is triggered on the event that normally provides interaction behavior for the parent component. The value cannot be an EL expression.</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <behavior-extension>
            <cdk:base-class>org.richfaces.component.behavior.ClientValidatorImpl</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>validator</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.ClientValidatorHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
        </behavior-extension>
    </behavior>
    <faces-config-extension>
        <cdk:faces-event>
            <cdk:description>Associates tree toggle listener with &lt;rich:tree&gt; component in order to listen for tree toggling events on server-side.</cdk:description>
            <cdk:listener-class>org.richfaces.event.TreeToggleListener</cdk:listener-class>
            <cdk:listener-method>processTreeToggle</cdk:listener-method>
            <cdk:source-class>org.richfaces.event.TreeToggleSource</cdk:source-class>
            <cdk:tag>
                <cdk:generate>true</cdk:generate>
                <cdk:tag-name>treeToggleListener</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeToggleListenerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:event-class>org.richfaces.event.TreeToggleEvent</cdk:event-class>
        </cdk:faces-event>
        <cdk:faces-event>
            <cdk:description>Associates tree selection change listener with &lt;rich:tree&gt; component in order to listen for tree selection events on server-side.</cdk:description>
            <cdk:listener-class>org.richfaces.event.TreeSelectionChangeListener</cdk:listener-class>
            <cdk:listener-method>processTreeSelectionChange</cdk:listener-method>
            <cdk:source-class>org.richfaces.event.TreeSelectionChangeSource</cdk:source-class>
            <cdk:tag>
                <cdk:generate>true</cdk:generate>
                <cdk:tag-name>treeSelectionChangeListener</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.TreeSelectionChangeListenerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:event-class>org.richfaces.event.TreeSelectionChangeEvent</cdk:event-class>
        </cdk:faces-event>
        <cdk:faces-event>
            <cdk:description>Associates item change listener with any toggleable panel (accordion, collapsiblePanel, tabPanel, togglePanel, panelMenu) in order to listen for item change events.</cdk:description>
            <cdk:listener-class>org.richfaces.event.ItemChangeListener</cdk:listener-class>
            <cdk:listener-method>process</cdk:listener-method>
            <cdk:source-class>org.richfaces.event.ItemChangeSource</cdk:source-class>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>itemChangeListener</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.ItemChangeListenerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:event-class>org.richfaces.event.ItemChangeEvent</cdk:event-class>
        </cdk:faces-event>
        <cdk:faces-event>
            <cdk:description>Associates panel toggle listener with collapsiblePanel in order to listen for panel toggle events.</cdk:description>
            <cdk:listener-class>org.richfaces.event.PanelToggleListener</cdk:listener-class>
            <cdk:listener-method>process</cdk:listener-method>
            <cdk:source-class>org.richfaces.event.PanelToggleSource</cdk:source-class>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>panelToggleListener</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.PanelToggleListenerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:event-class>org.richfaces.event.PanelToggleEvent</cdk:event-class>
        </cdk:faces-event>
        <cdk:function>
            <description> The rich:clientId('id') function returns the client identifier related to the passed component identifier ('id'). If the
 specified component identifier is not found, null is returned instead.
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>clientId</cdk:function-name>
            <cdk:function-signature>java.lang.String clientId(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> The rich:component('id') function is equivalent to the RichFaces.component('clientId') code. It returns the client object
 instance based on the passed server-side component identifier ('id'). If the specified component identifier is not found,
 null is returned instead. The function can be used to get an object from a component to call a JavaScript API function
 without using the &lt;rich:componentControl&gt; component.
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>component</cdk:function-name>
            <cdk:function-signature>java.lang.String component(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> &lt;p&gt;The rich:element('id') function is a shortcut for the equivalent document.getElementById(#{rich:clientId('id')}) code. It
 returns the element from the client, based on the passed server-side component identifier. If the specified component
 identifier is not found, null is returned instead.&lt;/p&gt;
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>element</cdk:function-name>
            <cdk:function-signature>java.lang.String element(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> The rich:jQuerySelector('id') function will perform nearly the same function as rich:clientId('id') but will transform
 the resulting id into a jQuery id selector which means that it will add a "#" character at the beginning and escape all
 reserved characters in CSS selectors.
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>jQuerySelector</cdk:function-name>
            <cdk:function-signature>java.lang.String jQuerySelector(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> &lt;p&gt;The rich:jQuery('id') function is a shortcut for the equivalent jQuery(#{rich:element('id')}) code. It returns the
 jQuery object from the client, based on the passed server-side component identifier. If the specified component
 identifier is not found, empty jQuery object is returned instead.&lt;/p&gt;

 &lt;p&gt;This function is for use in EL.  Refer to the &amp;lt;rich:jQuery&amp;gt; component for access to the jQuery library as a
 facelet tag.&lt;/p&gt;
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>jQuery</cdk:function-name>
            <cdk:function-signature>java.lang.String jQuery(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> The rich:findComponent('id') function returns the a UIComponent instance of the passed component identifier. If the
 specified component identifier is not found, null is returned instead.
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>findComponent</cdk:function-name>
            <cdk:function-signature>javax.faces.component.UIComponent findComponent(java.lang.String)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> &lt;p&gt;
 The rich:isUserInRole(Object) function checks whether the logged-in user belongs to a certain user role, such as being an
 administrator. User roles are defined in the web.xml settings file.
 &lt;/p&gt;

 @since 3.3.1
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>isUserInRole</cdk:function-name>
            <cdk:function-signature>boolean isUserInRole(java.lang.Object)</cdk:function-signature>
        </cdk:function>
        <cdk:function>
            <description> Convert any Java Object to JavaScript representation, converting types properly, e.g.:

 &lt;ul&gt;
 &lt;li&gt;&lt;tt&gt;Java primitives&lt;/tt&gt;&lt;/li&gt;
 &lt;li&gt;&lt;tt&gt;Arrays: toScript(new int[] { 1, 2, 3 }) -&amp;gt; [1, 2, 3]&lt;/tt&gt;&lt;/li&gt;
 &lt;li&gt;&lt;tt&gt;Collections (sets, lists): toScript(Arrays.asList(new int[] { 1, 2, 3 })) -&amp;gt; [1, 2, 3]&lt;/tt&gt;&lt;/li&gt;
 &lt;li&gt;&lt;tt&gt;Maps: toScript((Map&amp;lt;String, String&amp;gt;)map) -&amp;gt; {\"a\":\"foo\",\"b\":\"bar\",\"c\":\"baz\"}&lt;/tt&gt;&lt;/li&gt;
 &lt;li&gt;
 &lt;tt&gt;Beans / Objects: toScript(new Bean[] { new Bean(1, true, "bar") }) -&amp;gt; [{\"bool\":true,\"foo\":\"bar\",\"integer\":1}]&lt;/tt&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;tt&gt;Dates and Timezones&lt;/tt&gt;&lt;/li&gt;

 &lt;li&gt;&lt;tt&gt;Combinations of above&lt;/tt&gt;&lt;/li&gt;
 &lt;/ul&gt;

 This function delegates to org.richfaces.javascript.ScriptUtils#toScript(Object)
</description>
            <cdk:function-class>org.richfaces.function.RichFunction</cdk:function-class>
            <cdk:function-name>toScript</cdk:function-name>
            <cdk:function-signature>java.lang.String toScript(java.lang.Object)</cdk:function-signature>
        </cdk:function>
        <cdk:prefix>org.richfaces</cdk:prefix>
        <cdk:taglib>
            <cdk:shortName>rich</cdk:shortName>
            <cdk:uri>http://richfaces.org/rich</cdk:uri>
        </cdk:taglib>
    </faces-config-extension>
</faces-config>
